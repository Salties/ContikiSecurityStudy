!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADDINC128	sha2/sha2.c	176;"	d	file:
AES128	crypto.h	/^typedef enum { AES128=0 $/;"	e	enum:__anon14
AES_MAXKEYBITS	aes/rijndael.h	33;"	d
AES_MAXKEYBYTES	aes/rijndael.h	34;"	d
AES_MAXROUNDS	aes/rijndael.h	36;"	d
AMERICANO	mi_util.c	/^typedef enum { AMERICANO, CAPPUCCINO, ESPRESSO, MOCHA, FLAVOUR, EMPTY } Coffee;$/;"	e	enum:__anon23	file:
ARFLAGS	Makefile	/^ARFLAGS:=cru$/;"	m
A_DATA_LEN	dtls.c	1246;"	d	file:
A_DATA_LEN	dtls.c	2940;"	d	file:
AddMilk	mi_util.c	/^int AddMilk(char *buf, int degree)$/;"	f
AddSugar	mi_util.c	/^int AddSugar(char *buf, int degree)$/;"	f
BIG_ENDIAN	sha2/sha2.c	103;"	d	file:
BUFLEN	sha2/sha2prog.c	48;"	d	file:
BUFSIZE	sha2/sha2speed.c	42;"	d	file:
BYTE_ORDER	platform-specific/config-cc2538dk.h	1;"	d
BYTE_ORDER	platform-specific/config-econotag.h	1;"	d
BYTE_ORDER	platform-specific/config-sky.h	1;"	d
BYTE_ORDER	sha2/sha2.c	108;"	d	file:
BYTE_ORDER	sha2/sha2.c	110;"	d	file:
BasePointx	ecc/testecc.c	/^uint32_t BasePointx[8] = {	0xd898c296, 0xf4a13945, 0x2deb33a0, 0x77037d81,$/;"	v
BasePointy	ecc/testecc.c	/^uint32_t BasePointy[8] = {	0x37bf51f5, 0xcbb64068, 0x6b315ece, 0x2bce3357,$/;"	v
CALL	dtls.c	174;"	d	file:
CAPPUCCINO	mi_util.c	/^typedef enum { AMERICANO, CAPPUCCINO, ESPRESSO, MOCHA, FLAVOUR, EMPTY } Coffee;$/;"	e	enum:__anon23	file:
CCM_FLAGS	ccm.c	37;"	d	file:
CDL_DELETE	utlist.h	456;"	d
CDL_FOREACH	utlist.h	467;"	d
CDL_FOREACH_SAFE	utlist.h	470;"	d
CDL_PREPEND	utlist.h	442;"	d
CDL_SEARCH	utlist.h	482;"	d
CDL_SEARCH_SCALAR	utlist.h	475;"	d
CDL_SORT	utlist.h	214;"	d
CFLAGS	Makefile	/^CFLAGS:=-Wall -pedantic -std=c99 -g$/;"	m
CFLAGS	aes/Makefile	/^CFLAGS=-Wall -std=c99 -pedantic -g -O2$/;"	m
CFLAGS	ecc/Makefile	/^CFLAGS=-Wall -std=c99 -pedantic -g -O2 -DTEST_INCLUDE$/;"	m
CFLAGS	sha2/Makefile	/^CFLAGS=-Wall -std=c99 -pedantic -g -O2$/;"	m
CFLAGS	tests/Makefile	/^CFLAGS:=-Wall -g$/;"	m
CLIENTHELLO	dtls.c	99;"	d	file:
CLOCK_SECOND	dtls_time.h	52;"	d
COFFEE_COOLDOWN_TIME	mi_util.c	83;"	d	file:
CONTIKI	examples/contiki/Makefile	/^CONTIKI=$(top_srcdir)\/..\/..$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS:= -DDTLSv12 -DWITH_SHA256 -DDTLS_CHECK_CONTENTTYPE$/;"	m
CPPFLAGS	aes/Makefile	/^CPPFLAGS= -DDTLSv12 -DWITH_SHA256$/;"	m
CPPFLAGS	ecc/Makefile	/^CPPFLAGS= -DDTLSv12 -DWITH_SHA256$/;"	m
CPPFLAGS	sha2/Makefile	/^CPPFLAGS= -DDTLSv12 -DWITH_SHA256 -I$(top_srcdir)$/;"	m
CPPFLAGS	tests/Makefile	/^CPPFLAGS:=-I$(top_srcdir)  -DDTLSv12 -DWITH_SHA256$/;"	m
Ch	sha2/sha2.c	228;"	d	file:
Coffee	mi_util.c	/^typedef enum { AMERICANO, CAPPUCCINO, ESPRESSO, MOCHA, FLAVOUR, EMPTY } Coffee;$/;"	t	typeref:enum:__anon23	file:
DEBUG	debug.h	37;"	d
DEBUG	examples/contiki/dtls-client.c	41;"	d	file:
DEBUG	examples/contiki/dtls-server.c	43;"	d	file:
DECLTYPE	uthash.h	36;"	d
DECLTYPE	uthash.h	39;"	d
DECLTYPE	uthash.h	42;"	d
DECLTYPE_ASSIGN	uthash.h	46;"	d
DECLTYPE_ASSIGN	uthash.h	52;"	d
DEFAULT_PORT	tests/dtls-client.c	25;"	d	file:
DEFAULT_PORT	tests/dtls-server.c	23;"	d	file:
DISTDIR	Makefile	/^DISTDIR=$(top_builddir)\/$(package)$/;"	m
DISTDIR	aes/Makefile	/^DISTDIR=$(top_builddir)\/tinydtls-0.8.1$/;"	m
DISTDIR	doc/Makefile	/^DISTDIR?=$(top_builddir)\/tinydtls-0.8.1$/;"	m
DISTDIR	ecc/Makefile	/^DISTDIR=$(top_builddir)\/tinydtls-0.8.1$/;"	m
DISTDIR	examples/contiki/Makefile	/^DISTDIR=$(top_builddir)\/tinydtls-0.8.1$/;"	m
DISTDIR	platform-specific/Makefile	/^DISTDIR?=$(top_builddir)\/tinydtls-0.8.1$/;"	m
DISTDIR	sha2/Makefile	/^DISTDIR=$(top_builddir)\/tinydtls-0.8.1$/;"	m
DISTDIR	tests/Makefile	/^DISTDIR=$(top_builddir)\/tinydtls-0.8.1$/;"	m
DISTSUBDIRS	Makefile	/^DISTSUBDIRS:=$(SUBDIRS) examples\/contiki$/;"	m
DL_APPEND	utlist.h	396;"	d
DL_DELETE	utlist.h	410;"	d
DL_FOREACH	utlist.h	428;"	d
DL_FOREACH_SAFE	utlist.h	432;"	d
DL_PREPEND	utlist.h	384;"	d
DL_SEARCH	utlist.h	437;"	d
DL_SEARCH_SCALAR	utlist.h	436;"	d
DL_SORT	utlist.h	156;"	d
DOXYGEN	doc/Makefile	/^DOXYGEN= :$/;"	m
DTLS_ALERT_ACCESS_DENIED	alert.h	/^  DTLS_ALERT_ACCESS_DENIED = 49,		\/* access_denied *\/$/;"	e	enum:__anon7
DTLS_ALERT_BAD_CERTIFICATE	alert.h	/^  DTLS_ALERT_BAD_CERTIFICATE = 42,		\/* bad_certificate *\/$/;"	e	enum:__anon7
DTLS_ALERT_BAD_RECORD_MAC	alert.h	/^  DTLS_ALERT_BAD_RECORD_MAC = 20,		\/* bad_record_mac *\/$/;"	e	enum:__anon7
DTLS_ALERT_CERTIFICATE_EXPIRED	alert.h	/^  DTLS_ALERT_CERTIFICATE_EXPIRED = 45,		\/* certificate_expired *\/$/;"	e	enum:__anon7
DTLS_ALERT_CERTIFICATE_REVOKED	alert.h	/^  DTLS_ALERT_CERTIFICATE_REVOKED = 44,		\/* certificate_revoked *\/$/;"	e	enum:__anon7
DTLS_ALERT_CERTIFICATE_UNKNOWN	alert.h	/^  DTLS_ALERT_CERTIFICATE_UNKNOWN = 46,		\/* certificate_unknown *\/$/;"	e	enum:__anon7
DTLS_ALERT_CLOSE_NOTIFY	alert.h	/^  DTLS_ALERT_CLOSE_NOTIFY = 0,			\/* close_notify *\/$/;"	e	enum:__anon7
DTLS_ALERT_DECODE_ERROR	alert.h	/^  DTLS_ALERT_DECODE_ERROR = 50,			\/* decode_error *\/$/;"	e	enum:__anon7
DTLS_ALERT_DECOMPRESSION_FAILURE	alert.h	/^  DTLS_ALERT_DECOMPRESSION_FAILURE = 30,	\/* decompression_failure *\/$/;"	e	enum:__anon7
DTLS_ALERT_DECRYPT_ERROR	alert.h	/^  DTLS_ALERT_DECRYPT_ERROR = 51,		\/* decrypt_error *\/$/;"	e	enum:__anon7
DTLS_ALERT_HANDSHAKE_FAILURE	alert.h	/^  DTLS_ALERT_HANDSHAKE_FAILURE = 40,		\/* handshake_failure *\/$/;"	e	enum:__anon7
DTLS_ALERT_ILLEGAL_PARAMETER	alert.h	/^  DTLS_ALERT_ILLEGAL_PARAMETER = 47,		\/* illegal_parameter *\/$/;"	e	enum:__anon7
DTLS_ALERT_INSUFFICIENT_SECURITY	alert.h	/^  DTLS_ALERT_INSUFFICIENT_SECURITY = 71,	\/* insufficient_security *\/$/;"	e	enum:__anon7
DTLS_ALERT_INTERNAL_ERROR	alert.h	/^  DTLS_ALERT_INTERNAL_ERROR = 80,		\/* internal_error *\/$/;"	e	enum:__anon7
DTLS_ALERT_LEVEL_FATAL	alert.h	/^  DTLS_ALERT_LEVEL_FATAL=2$/;"	e	enum:__anon6
DTLS_ALERT_LEVEL_WARNING	alert.h	/^  DTLS_ALERT_LEVEL_WARNING=1,$/;"	e	enum:__anon6
DTLS_ALERT_NO_RENEGOTIATION	alert.h	/^  DTLS_ALERT_NO_RENEGOTIATION = 100,		\/* no_renegotiation *\/$/;"	e	enum:__anon7
DTLS_ALERT_PROTOCOL_VERSION	alert.h	/^  DTLS_ALERT_PROTOCOL_VERSION = 70,		\/* protocol_version *\/$/;"	e	enum:__anon7
DTLS_ALERT_RECORD_OVERFLOW	alert.h	/^  DTLS_ALERT_RECORD_OVERFLOW = 22,		\/* record_overflow *\/$/;"	e	enum:__anon7
DTLS_ALERT_UNEXPECTED_MESSAGE	alert.h	/^  DTLS_ALERT_UNEXPECTED_MESSAGE = 10,		\/* unexpected_message *\/$/;"	e	enum:__anon7
DTLS_ALERT_UNKNOWN_CA	alert.h	/^  DTLS_ALERT_UNKNOWN_CA = 48,			\/* unknown_ca *\/$/;"	e	enum:__anon7
DTLS_ALERT_UNSUPPORTED_CERTIFICATE	alert.h	/^  DTLS_ALERT_UNSUPPORTED_CERTIFICATE = 43,	\/* unsupported_certificate *\/$/;"	e	enum:__anon7
DTLS_ALERT_UNSUPPORTED_EXTENSION	alert.h	/^  DTLS_ALERT_UNSUPPORTED_EXTENSION = 110	\/* unsupported_extension *\/$/;"	e	enum:__anon7
DTLS_ALERT_USER_CANCELED	alert.h	/^  DTLS_ALERT_USER_CANCELED = 90,		\/* user_canceled *\/$/;"	e	enum:__anon7
DTLS_BLK_LENGTH	crypto.h	46;"	d
DTLS_CCM_BLOCKSIZE	ccm.h	33;"	d
DTLS_CCM_MAX	ccm.h	34;"	d
DTLS_CCM_NONCE_SIZE	ccm.h	35;"	d
DTLS_CE_LENGTH	dtls.c	80;"	d	file:
DTLS_CH_LENGTH	dtls.c	75;"	d	file:
DTLS_CH_LENGTH_MAX	dtls.c	77;"	d	file:
DTLS_CKXEC_LENGTH	dtls.c	85;"	d	file:
DTLS_CKXPSK_LENGTH_MIN	dtls.c	84;"	d	file:
DTLS_CLIENT	peer.h	/^typedef enum { DTLS_CLIENT=0, DTLS_SERVER } dtls_peer_type;$/;"	e	enum:__anon30
DTLS_CLIENT_CMD_CLOSE	tests/dtls-client.c	337;"	d	file:
DTLS_CLIENT_CMD_RENEGOTIATE	tests/dtls-client.c	338;"	d	file:
DTLS_COOKIE_LENGTH	dtls.h	323;"	d
DTLS_COOKIE_LENGTH_MAX	dtls.c	76;"	d	file:
DTLS_COOKIE_SECRET_LENGTH	dtls.h	71;"	d
DTLS_CT_ALERT	dtls.h	326;"	d
DTLS_CT_APPLICATION_DATA	dtls.h	328;"	d
DTLS_CT_CHANGE_CIPHER_SPEC	dtls.h	325;"	d
DTLS_CT_HANDSHAKE	dtls.h	327;"	d
DTLS_CV_LENGTH	dtls.c	86;"	d	file:
DTLS_DEFAULT_MAX_RETRANSMIT	global.h	70;"	d
DTLS_ECC	dtls_config.h	8;"	d
DTLS_ECC	tinydtls.h	37;"	d
DTLS_ECDH_CURVE_SECP256R1	crypto.h	/^  DTLS_ECDH_CURVE_SECP256R1$/;"	e	enum:__anon15
DTLS_EC_KEY_SIZE	crypto.h	309;"	d
DTLS_EVENT_CONNECT	alert.h	64;"	d
DTLS_EVENT_CONNECTED	alert.h	65;"	d
DTLS_EVENT_RENEGOTIATE	alert.h	67;"	d
DTLS_FIN_LENGTH	dtls.c	87;"	d	file:
DTLS_HANDSHAKE_HEADER	dtls.c	96;"	d	file:
DTLS_HASH_CTX_SIZE	hmac.h	40;"	d
DTLS_HMAC_BLOCKSIZE	hmac.h	73;"	d
DTLS_HMAC_DIGEST_SIZE	hmac.h	74;"	d
DTLS_HMAC_MAX	hmac.h	75;"	d
DTLS_HS_LENGTH	dtls.c	74;"	d	file:
DTLS_HT_CERTIFICATE	dtls.h	346;"	d
DTLS_HT_CERTIFICATE_REQUEST	dtls.h	348;"	d
DTLS_HT_CERTIFICATE_VERIFY	dtls.h	350;"	d
DTLS_HT_CLIENT_HELLO	dtls.h	343;"	d
DTLS_HT_CLIENT_KEY_EXCHANGE	dtls.h	351;"	d
DTLS_HT_FINISHED	dtls.h	352;"	d
DTLS_HT_HELLO_REQUEST	dtls.h	342;"	d
DTLS_HT_HELLO_VERIFY_REQUEST	dtls.h	345;"	d
DTLS_HT_SERVER_HELLO	dtls.h	344;"	d
DTLS_HT_SERVER_HELLO_DONE	dtls.h	349;"	d
DTLS_HT_SERVER_KEY_EXCHANGE	dtls.h	347;"	d
DTLS_HV_LENGTH	dtls.c	78;"	d	file:
DTLS_IV_LENGTH	crypto.h	48;"	d
DTLS_KEY_LENGTH	crypto.h	45;"	d
DTLS_LOG_ALERT	debug.h	/^typedef enum { DTLS_LOG_EMERG=0, DTLS_LOG_ALERT, DTLS_LOG_CRIT, DTLS_LOG_WARN, $/;"	e	enum:__anon24
DTLS_LOG_CRIT	debug.h	/^typedef enum { DTLS_LOG_EMERG=0, DTLS_LOG_ALERT, DTLS_LOG_CRIT, DTLS_LOG_WARN, $/;"	e	enum:__anon24
DTLS_LOG_DEBUG	debug.h	/^       DTLS_LOG_NOTICE, DTLS_LOG_INFO, DTLS_LOG_DEBUG$/;"	e	enum:__anon24
DTLS_LOG_EMERG	debug.h	/^typedef enum { DTLS_LOG_EMERG=0, DTLS_LOG_ALERT, DTLS_LOG_CRIT, DTLS_LOG_WARN, $/;"	e	enum:__anon24
DTLS_LOG_INFO	debug.h	/^       DTLS_LOG_NOTICE, DTLS_LOG_INFO, DTLS_LOG_DEBUG$/;"	e	enum:__anon24
DTLS_LOG_NOTICE	debug.h	/^       DTLS_LOG_NOTICE, DTLS_LOG_INFO, DTLS_LOG_DEBUG$/;"	e	enum:__anon24
DTLS_LOG_WARN	debug.h	/^typedef enum { DTLS_LOG_EMERG=0, DTLS_LOG_ALERT, DTLS_LOG_CRIT, DTLS_LOG_WARN, $/;"	e	enum:__anon24
DTLS_MAC_KEY_LENGTH	crypto.h	44;"	d
DTLS_MAC_LENGTH	crypto.h	47;"	d
DTLS_MASTER_SECRET_LENGTH	crypto.h	59;"	d
DTLS_MAX_BUF	global.h	59;"	d
DTLS_MAX_BUF	global.h	61;"	d
DTLS_MAX_BUF	global.h	64;"	d
DTLS_PSK	dtls_config.h	11;"	d
DTLS_PSK	tinydtls.h	40;"	d
DTLS_PSK_HINT	dtls.h	/^  DTLS_PSK_HINT, DTLS_PSK_IDENTITY, DTLS_PSK_KEY$/;"	e	enum:dtls_credentials_type_t
DTLS_PSK_IDENTITY	dtls.h	/^  DTLS_PSK_HINT, DTLS_PSK_IDENTITY, DTLS_PSK_KEY$/;"	e	enum:dtls_credentials_type_t
DTLS_PSK_KEY	dtls.h	/^  DTLS_PSK_HINT, DTLS_PSK_IDENTITY, DTLS_PSK_KEY$/;"	e	enum:dtls_credentials_type_t
DTLS_PSK_MAX_CLIENT_IDENTITY_LEN	crypto.h	89;"	d
DTLS_PSK_MAX_KEY_LEN	crypto.h	92;"	d
DTLS_RANDOM_LENGTH	crypto.h	60;"	d
DTLS_RECORD_HEADER	dtls.c	95;"	d	file:
DTLS_RH_LENGTH	dtls.c	73;"	d	file:
DTLS_SERVER	peer.h	/^typedef enum { DTLS_CLIENT=0, DTLS_SERVER } dtls_peer_type;$/;"	e	enum:__anon30
DTLS_SERVER_CMD_CLOSE	tests/dtls-server.c	136;"	d	file:
DTLS_SERVER_CMD_RENEGOTIATE	tests/dtls-server.c	137;"	d	file:
DTLS_SH_LENGTH	dtls.c	79;"	d	file:
DTLS_SKEXECPSK_LENGTH_MAX	dtls.c	83;"	d	file:
DTLS_SKEXECPSK_LENGTH_MIN	dtls.c	82;"	d	file:
DTLS_SKEXEC_LENGTH	dtls.c	81;"	d	file:
DTLS_SOURCES	examples/contiki/Makefile	/^DTLS_SOURCES:=dtls-server.c dtls-client.c$/;"	m
DTLS_STATE_CLIENTHELLO	state.h	/^  DTLS_STATE_CLIENTHELLO, DTLS_STATE_WAIT_SERVERCERTIFICATE, DTLS_STATE_WAIT_SERVERKEYEXCHANGE,$/;"	e	enum:__anon8
DTLS_STATE_CLOSED	state.h	/^  DTLS_STATE_CLOSED$/;"	e	enum:__anon8
DTLS_STATE_CLOSING	state.h	/^  DTLS_STATE_CLOSING,$/;"	e	enum:__anon8
DTLS_STATE_CONNECTED	state.h	/^  DTLS_STATE_CONNECTED,$/;"	e	enum:__anon8
DTLS_STATE_FINISHED	state.h	/^  DTLS_STATE_WAIT_FINISHED, DTLS_STATE_FINISHED, $/;"	e	enum:__anon8
DTLS_STATE_INIT	state.h	/^  DTLS_STATE_INIT = 0, DTLS_STATE_WAIT_CLIENTHELLO, DTLS_STATE_WAIT_CLIENTCERTIFICATE,$/;"	e	enum:__anon8
DTLS_STATE_WAIT_CERTIFICATEVERIFY	state.h	/^  DTLS_STATE_WAIT_CLIENTKEYEXCHANGE, DTLS_STATE_WAIT_CERTIFICATEVERIFY,$/;"	e	enum:__anon8
DTLS_STATE_WAIT_CHANGECIPHERSPEC	state.h	/^  DTLS_STATE_WAIT_CHANGECIPHERSPEC,$/;"	e	enum:__anon8
DTLS_STATE_WAIT_CLIENTCERTIFICATE	state.h	/^  DTLS_STATE_INIT = 0, DTLS_STATE_WAIT_CLIENTHELLO, DTLS_STATE_WAIT_CLIENTCERTIFICATE,$/;"	e	enum:__anon8
DTLS_STATE_WAIT_CLIENTHELLO	state.h	/^  DTLS_STATE_INIT = 0, DTLS_STATE_WAIT_CLIENTHELLO, DTLS_STATE_WAIT_CLIENTCERTIFICATE,$/;"	e	enum:__anon8
DTLS_STATE_WAIT_CLIENTKEYEXCHANGE	state.h	/^  DTLS_STATE_WAIT_CLIENTKEYEXCHANGE, DTLS_STATE_WAIT_CERTIFICATEVERIFY,$/;"	e	enum:__anon8
DTLS_STATE_WAIT_FINISHED	state.h	/^  DTLS_STATE_WAIT_FINISHED, DTLS_STATE_FINISHED, $/;"	e	enum:__anon8
DTLS_STATE_WAIT_SERVERCERTIFICATE	state.h	/^  DTLS_STATE_CLIENTHELLO, DTLS_STATE_WAIT_SERVERCERTIFICATE, DTLS_STATE_WAIT_SERVERKEYEXCHANGE,$/;"	e	enum:__anon8
DTLS_STATE_WAIT_SERVERHELLODONE	state.h	/^  DTLS_STATE_WAIT_SERVERHELLODONE,$/;"	e	enum:__anon8
DTLS_STATE_WAIT_SERVERKEYEXCHANGE	state.h	/^  DTLS_STATE_CLIENTHELLO, DTLS_STATE_WAIT_SERVERCERTIFICATE, DTLS_STATE_WAIT_SERVERKEYEXCHANGE,$/;"	e	enum:__anon8
DTLS_TICKS_PER_SECOND	dtls_time.h	61;"	d
DTLS_VERSION	dtls.h	54;"	d
DTLS_VERSION	dtls.h	56;"	d
DTLSv12	global.h	36;"	d
DrinkCoffee	mi_util.c	/^void DrinkCoffee(int seconds)$/;"	f
ECC_HEADERS	ecc/Makefile	/^ECC_HEADERS:= ecc.h test_helper.h$/;"	m
ECC_OBJECTS	ecc/Makefile	/^ECC_OBJECTS:= $(patsubst %.c, %.o, $(ECC_SOURCES)) ecc_test.o$/;"	m
ECC_SOURCES	ecc/Makefile	/^ECC_SOURCES:= ecc.c testecc.c testfield.c test_helper.c$/;"	m
ELMT_FROM_HH	uthash.h	80;"	d
EMPTY	mi_util.c	/^typedef enum { AMERICANO, CAPPUCCINO, ESPRESSO, MOCHA, FLAVOUR, EMPTY } Coffee;$/;"	e	enum:__anon23	file:
ESPRESSO	mi_util.c	/^typedef enum { AMERICANO, CAPPUCCINO, ESPRESSO, MOCHA, FLAVOUR, EMPTY } Coffee;$/;"	e	enum:__anon23	file:
ETAGS	Makefile	/^ETAGS = \/usr\/bin\/etags$/;"	m
Error	sha2/sha2test.pl	/^Error:$/;"	l
FILES	Makefile	/^FILES:=Makefile.in configure configure.in dtls_config.h.in tinydtls.h.in \\$/;"	m
FILES	aes/Makefile	/^FILES:=Makefile.in $(SOURCES) $(HEADERS) $/;"	m
FILES	doc/Makefile	/^FILES:=Makefile.in Doxyfile.in html$/;"	m
FILES	ecc/Makefile	/^FILES:=Makefile.in Makefile.contiki $(ECC_SOURCES) $(ECC_HEADERS) $/;"	m
FILES	examples/contiki/Makefile	/^FILES:=Makefile.in $(DTLS_SOURCES)$/;"	m
FILES	platform-specific/Makefile	/^FILES:=Makefile.in $(wildcard *.h)$/;"	m
FILES	sha2/Makefile	/^FILES:=Makefile.in $(SOURCES) $(HEADERS) README sha2prog.c sha2speed.c sha2test.pl $/;"	m
FILES	tests/Makefile	/^FILES:=Makefile.in $(SOURCES) ccm-testdata.c #cbc_aes128-testdata.c$/;"	m
FLAVOUR	mi_util.c	/^typedef enum { AMERICANO, CAPPUCCINO, ESPRESSO, MOCHA, FLAVOUR, EMPTY } Coffee;$/;"	e	enum:__anon23	file:
FULL_UNROLL	aes/rijndael.c	34;"	d	file:
GETU32	aes/rijndael.c	722;"	d	file:
GITIGNOREDS	Makefile	/^GITIGNOREDS:= core \\*~ \\*.[oa] \\*.gz \\*.cap \\*.pcap Makefile \\$/;"	m
GenData	tests/dtls-client.c	/^static void GenData(char *buffer, size_t * length)$/;"	f	file:
HANDSHAKE	dtls.c	98;"	d	file:
HASH_ADD	uthash.h	147;"	d
HASH_ADD_INT	uthash.h	235;"	d
HASH_ADD_KEYPTR	uthash.h	150;"	d
HASH_ADD_PEER	dtls.c	67;"	d	file:
HASH_ADD_PTR	uthash.h	239;"	d
HASH_ADD_STR	uthash.h	231;"	d
HASH_ADD_TO_BKT	uthash.h	650;"	d
HASH_BER	uthash.h	326;"	d
HASH_BKT_CAPACITY_THRESH	uthash.h	77;"	d
HASH_BLOOM_ADD	uthash.h	115;"	d
HASH_BLOOM_ADD	uthash.h	124;"	d
HASH_BLOOM_BITLEN	uthash.h	96;"	d
HASH_BLOOM_BITSET	uthash.h	112;"	d
HASH_BLOOM_BITTEST	uthash.h	113;"	d
HASH_BLOOM_BYTELEN	uthash.h	97;"	d
HASH_BLOOM_FREE	uthash.h	107;"	d
HASH_BLOOM_FREE	uthash.h	123;"	d
HASH_BLOOM_MAKE	uthash.h	122;"	d
HASH_BLOOM_MAKE	uthash.h	98;"	d
HASH_BLOOM_SIGNATURE	uthash.h	926;"	d
HASH_BLOOM_TEST	uthash.h	118;"	d
HASH_BLOOM_TEST	uthash.h	125;"	d
HASH_CLEAR	uthash.h	880;"	d
HASH_CNT	uthash.h	902;"	d
HASH_COUNT	uthash.h	901;"	d
HASH_DEL	uthash.h	241;"	d
HASH_DELETE	uthash.h	192;"	d
HASH_DEL_IN_BKT	uthash.h	664;"	d
HASH_DEL_PEER	dtls.c	69;"	d	file:
HASH_EMIT_KEY	uthash.h	308;"	d
HASH_EMIT_KEY	uthash.h	315;"	d
HASH_EXPAND_BUCKETS	uthash.h	705;"	d
HASH_FCN	uthash.h	320;"	d
HASH_FCN	uthash.h	322;"	d
HASH_FIND	uthash.h	82;"	d
HASH_FIND_INT	uthash.h	233;"	d
HASH_FIND_IN_BKT	uthash.h	636;"	d
HASH_FIND_PEER	dtls.c	65;"	d	file:
HASH_FIND_PTR	uthash.h	237;"	d
HASH_FIND_STR	uthash.h	229;"	d
HASH_FNV	uthash.h	348;"	d
HASH_FSCK	uthash.h	249;"	d
HASH_FSCK	uthash.h	301;"	d
HASH_INITIAL_NUM_BUCKETS	uthash.h	75;"	d
HASH_INITIAL_NUM_BUCKETS_LOG2	uthash.h	76;"	d
HASH_ITER	uthash.h	891;"	d
HASH_ITER	uthash.h	895;"	d
HASH_JEN	uthash.h	387;"	d
HASH_JEN_MIX	uthash.h	374;"	d
HASH_KEYCMP	uthash.h	633;"	d
HASH_MAKE_TABLE	uthash.h	128;"	d
HASH_MD5	hmac.h	/^  HASH_NONE=0, HASH_MD5=1, HASH_SHA1=2, HASH_SHA224=3,$/;"	e	enum:__anon12
HASH_MUR	uthash.h	495;"	d
HASH_MUR	uthash.h	497;"	d
HASH_MUR_ALIGNED	uthash.h	535;"	d
HASH_MUR_UNALIGNED	uthash.h	501;"	d
HASH_NONE	hmac.h	/^  HASH_NONE=0, HASH_MD5=1, HASH_SHA1=2, HASH_SHA224=3,$/;"	e	enum:__anon12
HASH_OAT	uthash.h	358;"	d
HASH_OOPS	uthash.h	248;"	d
HASH_SAX	uthash.h	338;"	d
HASH_SELECT	uthash.h	842;"	d
HASH_SFH	uthash.h	439;"	d
HASH_SHA1	hmac.h	/^  HASH_NONE=0, HASH_MD5=1, HASH_SHA1=2, HASH_SHA224=3,$/;"	e	enum:__anon12
HASH_SHA224	hmac.h	/^  HASH_NONE=0, HASH_MD5=1, HASH_SHA1=2, HASH_SHA224=3,$/;"	e	enum:__anon12
HASH_SHA256	hmac.h	/^  HASH_SHA256=4, HASH_SHA384=5, HASH_SHA512=6$/;"	e	enum:__anon12
HASH_SHA384	hmac.h	/^  HASH_SHA256=4, HASH_SHA384=5, HASH_SHA512=6$/;"	e	enum:__anon12
HASH_SHA512	hmac.h	/^  HASH_SHA256=4, HASH_SHA384=5, HASH_SHA512=6$/;"	e	enum:__anon12
HASH_SIGNATURE	uthash.h	925;"	d
HASH_SORT	uthash.h	757;"	d
HASH_SRT	uthash.h	758;"	d
HASH_TO_BKT	uthash.h	175;"	d
HAS_RESPOND	mi_util.c	12;"	d	file:
HAVE_ARPA_INET_H	dtls_config.h	14;"	d
HAVE_ASSERT_H	dtls_config.h	17;"	d
HAVE_ASSERT_H	platform-specific/config-cc2538dk.h	2;"	d
HAVE_ASSERT_H	platform-specific/config-econotag.h	2;"	d
HAVE_ASSERT_H	platform-specific/config-minimal-net.h	1;"	d
HAVE_ASSERT_H	platform-specific/config-sky.h	2;"	d
HAVE_ASSERT_H	platform-specific/config-wismote.h	1;"	d
HAVE_FCNTL_H	dtls_config.h	20;"	d
HAVE_INTTYPES_H	dtls_config.h	26;"	d
HAVE_MALLOC	dtls_config.h	30;"	d
HAVE_MEMORY_H	dtls_config.h	33;"	d
HAVE_MEMSET	dtls_config.h	36;"	d
HAVE_NETDB_H	dtls_config.h	39;"	d
HAVE_NETINET_IN_H	dtls_config.h	42;"	d
HAVE_SELECT	dtls_config.h	45;"	d
HAVE_SOCKET	dtls_config.h	51;"	d
HAVE_STDDEF_H	dtls_config.h	54;"	d
HAVE_STDINT_H	dtls_config.h	57;"	d
HAVE_STDLIB_H	dtls_config.h	60;"	d
HAVE_STRDUP	dtls_config.h	63;"	d
HAVE_STRERROR	dtls_config.h	66;"	d
HAVE_STRINGS_H	dtls_config.h	69;"	d
HAVE_STRING_H	dtls_config.h	72;"	d
HAVE_STRNLEN	dtls_config.h	75;"	d
HAVE_SYS_PARAM_H	dtls_config.h	78;"	d
HAVE_SYS_SOCKET_H	dtls_config.h	81;"	d
HAVE_SYS_STAT_H	dtls_config.h	84;"	d
HAVE_SYS_TIME_H	dtls_config.h	87;"	d
HAVE_SYS_TYPES_H	dtls_config.h	90;"	d
HAVE_TIME_H	dtls_config.h	93;"	d
HAVE_UNISTD_H	dtls_config.h	96;"	d
HAVE_VPRINTF	dtls_config.h	99;"	d
HEADERS	Makefile	/^HEADERS:=dtls.h hmac.h debug.h dtls_config.h uthash.h numeric.h crypto.h global.h ccm.h \\$/;"	m
HEADERS	aes/Makefile	/^HEADERS:= rijndael.h$/;"	m
HEADERS	sha2/Makefile	/^HEADERS:=sha2.h$/;"	m
HEADERS	tests/Makefile	/^HEADERS:=$/;"	m
HIGH	dtls.c	92;"	d	file:
HMAC_UPDATE_SEED	crypto.c	52;"	d	file:
HS_HDR_LENGTH	dtls.c	89;"	d	file:
HV_HDR_LENGTH	dtls.c	90;"	d	file:
IsDtlsConnected	tests/dtls-client.c	/^int IsDtlsConnected(dtls_context_t * ctx, session_t * session)$/;"	f
K256	sha2/sha2.c	/^const static sha2_word32 K256[64] = {$/;"	v	file:
K512	sha2/sha2.c	/^const static sha2_word64 K512[80] = {$/;"	v	file:
L	tests/ccm-testdata.c	/^    size_t M, L;$/;"	m	struct:test_vector	file:
LDECLTYPE	utlist.h	66;"	d
LDECLTYPE	utlist.h	69;"	d
LDECLTYPE	utlist.h	72;"	d
LDFLAGS	Makefile	/^LDFLAGS:=$/;"	m
LDFLAGS	tests/Makefile	/^LDFLAGS:=-L$(top_builddir) $/;"	m
LDLIBS	aes/Makefile	/^LDLIBS=$/;"	m
LDLIBS	ecc/Makefile	/^LDLIBS=$/;"	m
LDLIBS	sha2/Makefile	/^LDLIBS=$/;"	m
LDLIBS	tests/Makefile	/^LDLIBS:=-ltinydtls $/;"	m
LIB	Makefile	/^LIB:=libtinydtls.a$/;"	m
LIST_CONCAT	t_list.h	84;"	d
LIST_STRUCT	t_list.h	86;"	d
LIST_STRUCT_INIT	t_list.h	90;"	d
LITTLE_ENDIAN	sha2/sha2.c	100;"	d	file:
LL_APPEND	utlist.h	293;"	d
LL_APPEND	utlist.h	354;"	d
LL_APPEND	utlist.h	355;"	d
LL_APPEND_VS2008	utlist.h	323;"	d
LL_DELETE	utlist.h	306;"	d
LL_DELETE	utlist.h	356;"	d
LL_DELETE	utlist.h	357;"	d
LL_DELETE_VS2008	utlist.h	335;"	d
LL_FOREACH	utlist.h	361;"	d
LL_FOREACH_SAFE	utlist.h	364;"	d
LL_PREPEND	utlist.h	287;"	d
LL_SEARCH	utlist.h	374;"	d
LL_SEARCH_SCALAR	utlist.h	367;"	d
LL_SORT	utlist.h	100;"	d
LOW	dtls.c	93;"	d	file:
LeakyCoffee_C	mi_util.c	/^int LeakyCoffee_C(struct dtls_context_t *ctx, session_t * dst, uint8_t * buf, size_t * len)$/;"	f
LeakyCoffee_S	mi_util.c	/^int LeakyCoffee_S(uint8_t * inbuf, size_t inlen, uint8_t * outbuf, size_t * outlen)$/;"	f
M	tests/ccm-testdata.c	/^    size_t M, L;$/;"	m	struct:test_vector	file:
MASK_L	ccm.c	39;"	d	file:
MAX_BUF	tests/dtls-client.c	37;"	d	file:
MAX_BUF	tests/dtls-server.c	54;"	d	file:
MAX_COUNT	tests/dtls-client.c	38;"	d	file:
MAX_DEGREE	mi_util.c	81;"	d	file:
MAX_DRINK_TIME	mi_util.c	82;"	d	file:
MAX_KEYBLOCK_LENGTH	crypto.h	55;"	d
MAX_PACKET	mi_util.c	14;"	d	file:
MAX_PAYLOAD_LEN	examples/contiki/dtls-client.c	64;"	d	file:
MAX_PAYLOAD_LEN	examples/contiki/dtls-server.c	57;"	d	file:
MAX_READ_BUF	tests/dtls-client.c	218;"	d	file:
MEMCPY_BCOPY	sha2/sha2.c	203;"	d	file:
MEMCPY_BCOPY	sha2/sha2.c	207;"	d	file:
MEMSET_BZERO	sha2/sha2.c	202;"	d	file:
MEMSET_BZERO	sha2/sha2.c	206;"	d	file:
MILK	mi_util.c	85;"	d	file:
MI_UTIL_H	mi_util.h	2;"	d
MKDIR	Makefile	/^MKDIR = mkdir$/;"	m
MKDIR	aes/Makefile	/^MKDIR = mkdir$/;"	m
MKDIR	doc/Makefile	/^MKDIR = mkdir$/;"	m
MKDIR	ecc/Makefile	/^MKDIR = mkdir$/;"	m
MKDIR	examples/contiki/Makefile	/^MKDIR = mkdir$/;"	m
MKDIR	platform-specific/Makefile	/^MKDIR = mkdir$/;"	m
MKDIR	sha2/Makefile	/^MKDIR = mkdir$/;"	m
MKDIR	tests/Makefile	/^MKDIR = mkdir$/;"	m
MOCHA	mi_util.c	/^typedef enum { AMERICANO, CAPPUCCINO, ESPRESSO, MOCHA, FLAVOUR, EMPTY } Coffee;$/;"	e	enum:__anon23	file:
MOOD	mi_util.c	88;"	d	file:
MUST_HASH	dtls.c	1411;"	d	file:
Maj	sha2/sha2.c	229;"	d	file:
NCOFFEE	mi_util.c	74;"	d	file:
NETQ_MAXCNT	netq.h	27;"	d
NETQ_MAXCNT	netq.h	29;"	d
NO_DECLTYPE	uthash.h	38;"	d
NO_DECLTYPE	utlist.h	68;"	d
NO_RESPOND	mi_util.c	13;"	d	file:
Nr	aes/rijndael.h	/^	int	Nr;			\/* key-length-dependent number of rounds *\/$/;"	m	struct:__anon25
OBJECTS	Makefile	/^OBJECTS:= $(patsubst %.c, %.o, $(SOURCES)) $(SUB_OBJECTS)$/;"	m
OBJECTS	aes/Makefile	/^OBJECTS:= $(patsubst %.c, %.o, $(SOURCES))$/;"	m
OBJECTS	sha2/Makefile	/^OBJECTS:= $(patsubst %.c, %.o, $(SOURCES))$/;"	m
OBJECTS	tests/Makefile	/^OBJECTS:= $(patsubst %.c, %.o, $(SOURCES))$/;"	m
Options	sha2/sha2test.pl	/^Options:$/;"	l
OrderCoffee_C	mi_util.c	/^int OrderCoffee_C(uint8_t * buf, size_t * len)$/;"	f
PACKAGE_BUGREPORT	dtls_config.h	102;"	d
PACKAGE_NAME	dtls_config.h	105;"	d
PACKAGE_STRING	dtls_config.h	108;"	d
PACKAGE_TARNAME	doc/Makefile	/^PACKAGE_TARNAME:=tinydtls$/;"	m
PACKAGE_TARNAME	dtls_config.h	111;"	d
PACKAGE_URL	dtls_config.h	114;"	d
PACKAGE_VERSION	dtls_config.h	117;"	d
PRF_LABEL	dtls.c	114;"	d	file:
PRF_LABEL_SIZE	dtls.c	115;"	d	file:
PRINTF	debug.h	57;"	d
PROCESS_THREAD	dtls.c	/^PROCESS_THREAD(dtls_retransmit_process, ev, data)$/;"	f
PROCESS_THREAD	ecc/testecc.c	/^PROCESS_THREAD(ecc_filed_test, ev, d)$/;"	f
PROCESS_THREAD	ecc/testfield.c	/^PROCESS_THREAD(ecc_filed_test, ev, d)$/;"	f
PROCESS_THREAD	examples/contiki/dtls-client.c	/^PROCESS_THREAD(udp_server_process, ev, data)$/;"	f
PROCESS_THREAD	examples/contiki/dtls-server.c	/^PROCESS_THREAD(udp_server_process, ev, data)$/;"	f
PROCESS_THREAD	tests/ccm-test.c	/^PROCESS_THREAD(ccm_test_process, ev, d)$/;"	f
PROGRAMS	ecc/Makefile	/^PROGRAMS:= testecc testfield$/;"	m
PROGRAMS	tests/Makefile	/^PROGRAMS:= $(patsubst %.c, %, $(SOURCES))$/;"	m
PSK_DEFAULT_IDENTITY	examples/contiki/dtls-client.c	57;"	d	file:
PSK_DEFAULT_IDENTITY	tests/dtls-client.c	27;"	d	file:
PSK_DEFAULT_KEY	examples/contiki/dtls-client.c	58;"	d	file:
PSK_DEFAULT_KEY	tests/dtls-client.c	28;"	d	file:
PSK_ID_MAXLEN	examples/contiki/dtls-client.c	55;"	d	file:
PSK_ID_MAXLEN	tests/dtls-client.c	122;"	d	file:
PSK_MAXLEN	examples/contiki/dtls-client.c	56;"	d	file:
PSK_MAXLEN	tests/dtls-client.c	123;"	d	file:
PSK_OPTIONS	tests/dtls-client.c	29;"	d	file:
PUTU32	aes/rijndael.c	723;"	d	file:
QUOTEME	examples/contiki/dtls-client.c	249;"	d	file:
R	sha2/sha2.c	221;"	d	file:
REVERSE32	sha2/sha2.c	156;"	d	file:
REVERSE64	sha2/sha2.c	161;"	d	file:
ROUND256	sha2/sha2.c	405;"	d	file:
ROUND256_0_TO_15	sha2/sha2.c	385;"	d	file:
ROUND256_0_TO_15	sha2/sha2.c	396;"	d	file:
ROUND512	sha2/sha2.c	733;"	d	file:
ROUND512_0_TO_15	sha2/sha2.c	713;"	d	file:
ROUND512_0_TO_15	sha2/sha2.c	724;"	d	file:
R_KEY_OFFSET	dtls.c	1912;"	d	file:
R_KEY_OFFSET	dtls.c	1918;"	d	file:
S32	sha2/sha2.c	223;"	d	file:
S64	sha2/sha2.c	225;"	d	file:
SET_COUNTER	ccm.c	41;"	d	file:
SHA256_BLOCK_LENGTH	sha2/sha2.h	58;"	d
SHA256_CTX	sha2/sha2.h	/^} SHA256_CTX;$/;"	t	typeref:struct:_SHA256_CTX
SHA256_DIGEST_LENGTH	sha2/sha2.h	59;"	d
SHA256_DIGEST_STRING_LENGTH	sha2/sha2.h	60;"	d
SHA256_Data	sha2/sha2.c	/^char* SHA256_Data(const sha2_byte* data, size_t len, char digest[SHA256_DIGEST_STRING_LENGTH]) {$/;"	f
SHA256_End	sha2/sha2.c	/^char *SHA256_End(SHA256_CTX* context, char buffer[]) {$/;"	f
SHA256_Final	sha2/sha2.c	/^void SHA256_Final(sha2_byte digest[], SHA256_CTX* context) {$/;"	f
SHA256_Init	sha2/sha2.c	/^void SHA256_Init(SHA256_CTX* context) {$/;"	f
SHA256_SHORT_BLOCK_LENGTH	sha2/sha2.c	149;"	d	file:
SHA256_Transform	sha2/sha2.c	/^void SHA256_Transform(SHA256_CTX* context, const sha2_word32* data) {$/;"	f
SHA256_Update	sha2/sha2.c	/^void SHA256_Update(SHA256_CTX* context, const sha2_byte *data, size_t len) {$/;"	f
SHA2_USE_MEMSET_MEMCPY	sha2/sha2.c	194;"	d	file:
SHA384_BLOCK_LENGTH	sha2/sha2.h	61;"	d
SHA384_CTX	sha2/sha2.h	/^typedef SHA512_CTX SHA384_CTX;$/;"	t
SHA384_DIGEST_LENGTH	sha2/sha2.h	62;"	d
SHA384_DIGEST_STRING_LENGTH	sha2/sha2.h	63;"	d
SHA384_Data	sha2/sha2.c	/^char* SHA384_Data(const sha2_byte* data, size_t len, char digest[SHA384_DIGEST_STRING_LENGTH]) {$/;"	f
SHA384_End	sha2/sha2.c	/^char *SHA384_End(SHA384_CTX* context, char buffer[]) {$/;"	f
SHA384_Final	sha2/sha2.c	/^void SHA384_Final(sha2_byte digest[], SHA384_CTX* context) {$/;"	f
SHA384_Init	sha2/sha2.c	/^void SHA384_Init(SHA384_CTX* context) {$/;"	f
SHA384_SHORT_BLOCK_LENGTH	sha2/sha2.c	150;"	d	file:
SHA384_Update	sha2/sha2.c	/^void SHA384_Update(SHA384_CTX* context, const sha2_byte* data, size_t len) {$/;"	f
SHA512_BLOCK_LENGTH	sha2/sha2.h	64;"	d
SHA512_CTX	sha2/sha2.h	/^} SHA512_CTX;$/;"	t	typeref:struct:_SHA512_CTX
SHA512_DIGEST_LENGTH	sha2/sha2.h	65;"	d
SHA512_DIGEST_STRING_LENGTH	sha2/sha2.h	66;"	d
SHA512_Data	sha2/sha2.c	/^char* SHA512_Data(const sha2_byte* data, size_t len, char digest[SHA512_DIGEST_STRING_LENGTH]) {$/;"	f
SHA512_End	sha2/sha2.c	/^char *SHA512_End(SHA512_CTX* context, char buffer[]) {$/;"	f
SHA512_Final	sha2/sha2.c	/^void SHA512_Final(sha2_byte digest[], SHA512_CTX* context) {$/;"	f
SHA512_Init	sha2/sha2.c	/^void SHA512_Init(SHA512_CTX* context) {$/;"	f
SHA512_Last	sha2/sha2.c	/^void SHA512_Last(SHA512_CTX* context) {$/;"	f
SHA512_SHORT_BLOCK_LENGTH	sha2/sha2.c	151;"	d	file:
SHA512_Transform	sha2/sha2.c	/^void SHA512_Transform(SHA512_CTX* context, const sha2_word64* data) {$/;"	f
SHA512_Update	sha2/sha2.c	/^void SHA512_Update(SHA512_CTX* context, const sha2_byte *data, size_t len) {$/;"	f
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	aes/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	doc/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	ecc/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	examples/contiki/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	platform-specific/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	sha2/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	tests/Makefile	/^SHELL = \/bin\/sh$/;"	m
SKIP_VAR_FIELD	dtls.c	106;"	d	file:
SOURCES	Makefile	/^SOURCES:= dtls.c crypto.c ccm.c hmac.c netq.c peer.c dtls_time.c session.c mi_util.c$/;"	m
SOURCES	aes/Makefile	/^SOURCES:= rijndael.c$/;"	m
SOURCES	sha2/Makefile	/^SOURCES:= sha2.c$/;"	m
SOURCES	tests/Makefile	/^SOURCES:= dtls-server.c ccm-test.c prf-test.c \\$/;"	m
STDC_HEADERS	dtls_config.h	120;"	d
STR_AMERICANO	mi_util.c	75;"	d	file:
STR_CAPPUCCINO	mi_util.c	76;"	d	file:
STR_ESPRESSO	mi_util.c	77;"	d	file:
STR_FLAVOUR	mi_util.c	79;"	d	file:
STR_MILK	mi_util.c	87;"	d	file:
STR_MOCHA	mi_util.c	78;"	d	file:
STR_SUGAR	mi_util.c	86;"	d	file:
SUBDIRS	Makefile	/^SUBDIRS:=tests doc platform-specific sha2 aes ecc$/;"	m
SUB_OBJECTS	Makefile	/^SUB_OBJECTS:=aes\/rijndael.o  ecc\/ecc.o sha2\/sha2.o$/;"	m
SUGAR	mi_util.c	84;"	d	file:
S_KEY_OFFSET	dtls.c	1913;"	d	file:
S_KEY_OFFSET	dtls.c	1919;"	d	file:
Sigma0_256	sha2/sha2.c	232;"	d	file:
Sigma0_512	sha2/sha2.c	238;"	d	file:
Sigma1_256	sha2/sha2.c	233;"	d	file:
Sigma1_512	sha2/sha2.c	239;"	d	file:
SingleOrEven_C	mi_util.c	/^void SingleOrEven_C(void *buf, size_t * len)$/;"	f
SingleOrEven_S	mi_util.c	/^int SingleOrEven_S(void *inbuf, size_t inlen, void *outbuf, size_t * outlen)$/;"	f
Sx	ecc/testecc.c	/^uint32_t Sx[8] = {	0x89da97c9, 0xb77cab39, 0x221a8fa0, 0x617519b3, $/;"	v
Sy	ecc/testecc.c	/^uint32_t Sy[8] = {	0x3042a256, 0xb6350b24, 0x53cec576, 0x702de80f,$/;"	v
THIS	platform-specific/Makefile	/^THIS=platform-specific$/;"	m
TLS_CERT_TYPE_RAW_PUBLIC_KEY	global.h	92;"	d
TLS_CLIENT_CERTIFICATE_TYPE_ECDSA_SIGN	global.h	100;"	d
TLS_COMPRESSION_NULL	global.h	/^  TLS_COMPRESSION_NULL = 0x0000		\/* NULL compression *\/$/;"	e	enum:__anon11
TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8	global.h	/^  TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 = 0xC0AE \/**< see RFC 7251 *\/$/;"	e	enum:__anon10
TLS_EC_CURVE_TYPE_NAMED_CURVE	global.h	98;"	d
TLS_EXT_CLIENT_CERTIFICATE_TYPE	global.h	88;"	d
TLS_EXT_EC_POINT_FORMATS	global.h	86;"	d
TLS_EXT_EC_POINT_FORMATS_UNCOMPRESSED	global.h	96;"	d
TLS_EXT_ELLIPTIC_CURVES	global.h	85;"	d
TLS_EXT_ELLIPTIC_CURVES_SECP256R1	global.h	94;"	d
TLS_EXT_ENCRYPT_THEN_MAC	global.h	90;"	d
TLS_EXT_SERVER_CERTIFICATE_TYPE	global.h	89;"	d
TLS_EXT_SIG_HASH_ALGO	global.h	87;"	d
TLS_EXT_SIG_HASH_ALGO_ECDSA	global.h	103;"	d
TLS_EXT_SIG_HASH_ALGO_SHA256	global.h	102;"	d
TLS_NULL_WITH_NULL_NULL	global.h	/^  TLS_NULL_WITH_NULL_NULL = 0x0000,   \/**< NULL cipher  *\/$/;"	e	enum:__anon10
TLS_PSK_WITH_AES_128_CCM_8	global.h	/^  TLS_PSK_WITH_AES_128_CCM_8 = 0xC0A8, \/**< see RFC 6655 *\/$/;"	e	enum:__anon10
TasteCoffee	mi_util.c	/^Coffee TasteCoffee(uint8_t * buf, size_t len)$/;"	f
TasteMilk	mi_util.c	/^int TasteMilk(char *cup, size_t len)$/;"	f
TasteSugar	mi_util.c	/^int TasteSugar(char *cup, size_t len)$/;"	f
Td0	aes/rijndael.c	/^static const aes_u32 Td0[256] = {$/;"	v	file:
Td1	aes/rijndael.c	/^static const aes_u32 Td1[256] = {$/;"	v	file:
Td2	aes/rijndael.c	/^static const aes_u32 Td2[256] = {$/;"	v	file:
Td3	aes/rijndael.c	/^static const aes_u32 Td3[256] = {$/;"	v	file:
Td4	aes/rijndael.c	/^static const aes_u32 Td4[256] = {$/;"	v	file:
Te0	aes/rijndael.c	/^static const aes_u32 Te0[256] = {$/;"	v	file:
Te1	aes/rijndael.c	/^static const aes_u32 Te1[256] = {$/;"	v	file:
Te2	aes/rijndael.c	/^static const aes_u32 Te2[256] = {$/;"	v	file:
Te3	aes/rijndael.c	/^static const aes_u32 Te3[256] = {$/;"	v	file:
Te4	aes/rijndael.c	/^static const aes_u32 Te4[256] = {$/;"	v	file:
Tx	ecc/testecc.c	/^uint32_t Tx[8] = {	0x35e0986b, 0xbb8cf92e, 0x61c89575, 0x39540dc8,$/;"	v
Ty	ecc/testecc.c	/^uint32_t Ty[8] = {	0xc8b24316, 0xb656e9d8, 0x598b9e7a, 0xf61a8a52,$/;"	v
UIP_CONF_IPV6	examples/contiki/Makefile	/^UIP_CONF_IPV6=1$/;"	m
UIP_CONF_IPV6_RPL	examples/contiki/Makefile	/^UIP_CONF_IPV6_RPL=0$/;"	m
UIP_IP_BUF	examples/contiki/dtls-client.c	61;"	d	file:
UIP_IP_BUF	examples/contiki/dtls-server.c	54;"	d	file:
UIP_UDP_BUF	examples/contiki/dtls-client.c	62;"	d	file:
UIP_UDP_BUF	examples/contiki/dtls-server.c	55;"	d	file:
UNUSED_PARAM	examples/contiki/dtls-client.c	138;"	d	file:
UNUSED_PARAM	examples/contiki/dtls-client.c	140;"	d	file:
UNUSED_PARAM	tests/dtls-client.c	32;"	d	file:
UNUSED_PARAM	tests/dtls-client.c	34;"	d	file:
UTHASH_VERSION	uthash.h	65;"	d
UTLIST_VERSION	utlist.h	27;"	d
UT_hash_bucket	uthash.h	/^typedef struct UT_hash_bucket {$/;"	s
UT_hash_bucket	uthash.h	/^} UT_hash_bucket;$/;"	t	typeref:struct:UT_hash_bucket
UT_hash_handle	uthash.h	/^typedef struct UT_hash_handle {$/;"	s
UT_hash_handle	uthash.h	/^} UT_hash_handle;$/;"	t	typeref:struct:UT_hash_handle
UT_hash_table	uthash.h	/^typedef struct UT_hash_table {$/;"	s
UT_hash_table	uthash.h	/^} UT_hash_table;$/;"	t	typeref:struct:UT_hash_table
Update	tests/dtls-client.c	/^static void Update(struct dtls_context_t *ctx)$/;"	f	file:
Usage	sha2/sha2test.pl	/^Usage:$/;"	l
VERSION	Makefile	/^VERSION:=0.8.1$/;"	m
VERSION	aes/Makefile	/^VERSION:=0.8.1$/;"	m
VERSION	doc/Makefile	/^VERSION:=0.8.1$/;"	m
VERSION	ecc/Makefile	/^VERSION:=0.8.1$/;"	m
VERSION	examples/contiki/Makefile	/^VERSION:=0.8.1$/;"	m
VERSION	platform-specific/Makefile	/^VERSION:=0.8.1$/;"	m
VERSION	sha2/Makefile	/^VERSION:=0.8.1$/;"	m
VERSION	tests/Makefile	/^VERSION:=0.8.1$/;"	m
WITH_SHA256	global.h	42;"	d
WITH_UIP6	examples/contiki/Makefile	/^WITH_UIP6=1$/;"	m
WORDS_BIGENDIAN	dtls_config.h	129;"	d
_CASTASGN	utlist.h	85;"	d
_CASTASGN	utlist.h	93;"	d
_DTLS_ALERT_H_	alert.h	32;"	d
_DTLS_CCM_H_	ccm.h	27;"	d
_DTLS_CRYPTO_H_	crypto.h	28;"	d
_DTLS_DEBUG_H_	debug.h	27;"	d
_DTLS_DTLS_H_	dtls.h	33;"	d
_DTLS_DTLS_TIME_H_	dtls_time.h	32;"	d
_DTLS_GLOBAL_H_	global.h	27;"	d
_DTLS_HMAC_H_	hmac.h	27;"	d
_DTLS_LIST_H_	t_list.h	32;"	d
_DTLS_NETQ_H_	netq.h	10;"	d
_DTLS_NUMERIC_H_	numeric.h	27;"	d
_DTLS_PEER_H_	peer.h	32;"	d
_DTLS_PRNG_H_	prng.h	15;"	d
_DTLS_SESSION_H_	session.h	27;"	d
_DTLS_STATE_H_	state.h	32;"	d
_DTLS_TINYDTLS_H_	tinydtls.h	34;"	d
_DTLS_UTHASH_H	uthash.h	25;"	d
_DTLS_UTLIST_H	utlist.h	25;"	d
_NEXT	utlist.h	80;"	d
_NEXT	utlist.h	88;"	d
_NEXTASGN	utlist.h	81;"	d
_NEXTASGN	utlist.h	89;"	d
_PREV	utlist.h	82;"	d
_PREV	utlist.h	90;"	d
_PREVASGN	utlist.h	83;"	d
_PREVASGN	utlist.h	91;"	d
_QUOTEME	examples/contiki/dtls-client.c	248;"	d	file:
_RS	utlist.h	84;"	d
_RS	utlist.h	92;"	d
_SHA256_CTX	sha2/sha2.h	/^typedef struct _SHA256_CTX {$/;"	s
_SHA512_CTX	sha2/sha2.h	/^typedef struct _SHA512_CTX {$/;"	s
_SV	utlist.h	79;"	d
_SV	utlist.h	87;"	d
__APPLE_USE_RFC_3542	tests/dtls-client.c	5;"	d	file:
__APPLE_USE_RFC_3542	tests/dtls-server.c	3;"	d	file:
__RIJNDAEL_H	aes/rijndael.h	29;"	d
__SHA2_H__	sha2/sha2.h	36;"	d
_dtls_address_equals_impl	session.c	/^static inline int _dtls_address_equals_impl(const session_t * a, const session_t * b)$/;"	f	file:
_dtls_address_equals_impl	session.c	39;"	d	file:
abs_builddir	Makefile	/^abs_builddir = \/home\/yy12135\/MyGit\/MI-Side-Channel-DTLS\/tinydtls-0.8.1$/;"	m
abs_builddir	aes/Makefile	/^abs_builddir = \/home\/yy12135\/MyGit\/MI-Side-Channel-DTLS\/tinydtls-0.8.1\/aes$/;"	m
abs_builddir	ecc/Makefile	/^abs_builddir = \/home\/yy12135\/MyGit\/MI-Side-Channel-DTLS\/tinydtls-0.8.1\/ecc$/;"	m
abs_builddir	examples/contiki/Makefile	/^abs_builddir = \/home\/yy12135\/MyGit\/MI-Side-Channel-DTLS\/tinydtls-0.8.1\/examples\/contiki$/;"	m
abs_builddir	sha2/Makefile	/^abs_builddir = \/home\/yy12135\/MyGit\/MI-Side-Channel-DTLS\/tinydtls-0.8.1\/sha2$/;"	m
abs_builddir	tests/Makefile	/^abs_builddir = \/home\/yy12135\/MyGit\/MI-Side-Channel-DTLS\/tinydtls-0.8.1\/tests$/;"	m
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_member	configure	/^ac_fn_c_check_member ()$/;"	f
ac_fn_c_check_type	configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
add	ecc/ecc.c	/^static uint32_t add( const uint32_t *x, const uint32_t *y, uint32_t *result, uint8_t length){$/;"	f	file:
addTest	ecc/testecc.c	/^void addTest(){$/;"	f
add_auth_data	ccm.c	/^add_auth_data(rijndael_ctx * ctx, const unsigned char *msg, size_t la,$/;"	f	file:
addr	session.h	/^  uip_ipaddr_t addr;$/;"	m	struct:__anon26
addr	session.h	/^  } addr;$/;"	m	struct:__anon27	typeref:union:__anon27::__anon28
aes128_ccm_t	crypto.h	/^} aes128_ccm_t;$/;"	t	typeref:struct:__anon16
aes_u16	aes/rijndael.h	/^typedef uint16_t	aes_u16;$/;"	t
aes_u32	aes/rijndael.h	/^typedef uint32_t	aes_u32;$/;"	t
aes_u8	aes/rijndael.h	/^typedef uint8_t		aes_u8;$/;"	t
app	dtls.h	/^  void *app;			\/**< application-specific data *\/$/;"	m	struct:dtls_context_t
arrayLength	ecc/ecc.h	41;"	d
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
assert	crypto.c	35;"	d	file:
assert	ecc/test_helper.h	48;"	d
assert	ecc/test_helper.h	49;"	d
assert	hmac.c	35;"	d	file:
assert	netq.c	18;"	d	file:
assert	session.c	34;"	d	file:
assert	sha2/sha2.c	43;"	d	file:
bitcount	sha2/sha2.h	/^	u_int64_t	bitcount;$/;"	m	struct:_SHA256_CTX
bitcount	sha2/sha2.h	/^	u_int64_t	bitcount[2];$/;"	m	struct:_SHA512_CTX
bitcount	sha2/sha2.h	/^	uint64_t	bitcount;$/;"	m	struct:_SHA256_CTX
bitcount	sha2/sha2.h	/^	uint64_t	bitcount[2];$/;"	m	struct:_SHA512_CTX
block0	ccm.c	/^static inline void block0(size_t M,	\/* number of auth bytes *\/$/;"	f	file:
bloom_bv	uthash.h	/^   uint8_t *bloom_bv;$/;"	m	struct:UT_hash_table
bloom_nbits	uthash.h	/^   char bloom_nbits;$/;"	m	struct:UT_hash_table
bloom_sig	uthash.h	/^   uint32_t bloom_sig; \/* used only to test bloom exists in external analysis *\/$/;"	m	struct:UT_hash_table
buckets	uthash.h	/^   UT_hash_bucket *buckets;$/;"	m	struct:UT_hash_table
buf	examples/contiki/dtls-client.c	/^static char buf[200];$/;"	v	file:
buf	tests/dtls-client.c	/^static uint8_t buf[MAX_BUF];$/;"	v	file:
buffer	sha2/sha2.h	/^	u_int8_t	buffer[SHA256_BLOCK_LENGTH];$/;"	m	struct:_SHA256_CTX
buffer	sha2/sha2.h	/^	u_int8_t	buffer[SHA512_BLOCK_LENGTH];$/;"	m	struct:_SHA512_CTX
buffer	sha2/sha2.h	/^	uint8_t	buffer[SHA256_BLOCK_LENGTH];$/;"	m	struct:_SHA256_CTX
buffer	sha2/sha2.h	/^	uint8_t	buffer[SHA512_BLOCK_LENGTH];$/;"	m	struct:_SHA512_CTX
buflen	examples/contiki/dtls-client.c	/^static size_t buflen = 0;$/;"	v	file:
calculate_key_block	dtls.c	/^calculate_key_block(dtls_context_t * ctx,$/;"	f	file:
cb	tests/dtls-client.c	/^static dtls_handler_t cb = {$/;"	v	file:
cb	tests/dtls-server.c	/^static dtls_handler_t cb = {$/;"	v	file:
ccm_test_process	tests/ccm-test.c	/^AUTOSTART_PROCESSES(&ccm_test_process);$/;"	v
cert_asn1_header	dtls.c	/^static const unsigned char cert_asn1_header[] = {$/;"	v	file:
check_certificate_request	dtls.c	/^static int check_certificate_request(dtls_context_t * ctx, dtls_peer_t * peer, uint8 * data, size_t data_length)$/;"	f	file:
check_client_certificate_verify	dtls.c	/^static int check_client_certificate_verify(dtls_context_t * ctx, dtls_peer_t * peer, uint8 * data, size_t data_length)$/;"	f	file:
check_client_keyexchange	dtls.c	/^check_client_keyexchange(dtls_context_t * ctx, dtls_handshake_parameters_t * handshake, uint8 * data, size_t length)$/;"	f	file:
check_finished	dtls.c	/^static int check_finished(dtls_context_t * ctx, dtls_peer_t * peer, uint8 * data, size_t data_length)$/;"	f	file:
check_server_certificate	dtls.c	/^static int check_server_certificate(dtls_context_t * ctx, dtls_peer_t * peer, uint8 * data, size_t data_length)$/;"	f	file:
check_server_hello	dtls.c	/^static int check_server_hello(dtls_context_t * ctx, dtls_peer_t * peer, uint8 * data, size_t data_length)$/;"	f	file:
check_server_hello_verify_request	dtls.c	/^static int check_server_hello_verify_request(dtls_context_t * ctx, dtls_peer_t * peer, uint8 * data, size_t data_length)$/;"	f	file:
check_server_hellodone	dtls.c	/^static int check_server_hellodone(dtls_context_t * ctx, dtls_peer_t * peer, uint8 * data, size_t data_length)$/;"	f	file:
check_server_key_exchange_ecdsa	dtls.c	/^static int check_server_key_exchange_ecdsa(dtls_context_t * ctx, dtls_peer_t * peer, uint8 * data, size_t data_length)$/;"	f	file:
check_server_key_exchange_psk	dtls.c	/^static int check_server_key_exchange_psk(dtls_context_t * ctx, dtls_peer_t * peer, uint8 * data, size_t data_length)$/;"	f	file:
check_stack	debug.h	/^static inline void check_stack() {$/;"	f
cipher	crypto.h	/^  dtls_cipher_t cipher;		\/**< cipher type *\/$/;"	m	struct:__anon19
cipher	crypto.h	/^  dtls_cipher_t cipher;		\/**< cipher type *\/$/;"	m	struct:__anon20
cipher_context	crypto.c	/^static struct dtls_cipher_context_t cipher_context;$/;"	v	typeref:struct:dtls_cipher_context_t	file:
cipher_context_mutex	crypto.c	/^static pthread_mutex_t cipher_context_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
clear_hs_hash	dtls.c	/^static inline void clear_hs_hash(dtls_peer_t * peer)$/;"	f	file:
client	crypto.h	/^      uint8 client[DTLS_RANDOM_LENGTH];	\/**< client random gmt and bytes *\/$/;"	m	struct:__anon20::__anon21::random_t
client_conn	examples/contiki/dtls-client.c	/^static struct uip_udp_conn *client_conn;$/;"	v	typeref:struct:uip_udp_conn	file:
clock_time_t	dtls_time.h	/^typedef uint32_t clock_time_t;$/;"	t
compression	crypto.h	/^  dtls_compression_t compression;		\/**< compression method *\/$/;"	m	struct:__anon20
compression	crypto.h	/^  dtls_compression_t compression;	\/**< compression method *\/$/;"	m	struct:__anon19
compression_methods	dtls.c	/^static uint8 compression_methods[] = {$/;"	v	file:
connected	tests/dtls-client.c	/^static int connected = 0;$/;"	v	file:
content_type	dtls.h	/^  uint8 content_type;		\/**< content type of the included message *\/$/;"	m	struct:__anon2
content_types	dtls.c	/^static char const content_types[] = {$/;"	v	file:
cookie	dtls.h	/^  uint8 cookie[];		\/**< up to 32 bytes making up the cookie *\/$/;"	m	struct:__anon5
cookie_length	dtls.h	/^  uint8 cookie_length;	\/**< Length of the included cookie *\/$/;"	m	struct:__anon5
cookie_secret	dtls.h	/^  unsigned char cookie_secret[DTLS_COOKIE_SECRET_LENGTH];$/;"	m	struct:dtls_context_t
cookie_secret_age	dtls.h	/^  clock_time_t cookie_secret_age; \/**< the time the secret has been generated *\/$/;"	m	struct:dtls_context_t
copy	ecc/ecc.c	/^static void copy(const uint32_t *from, uint32_t *to, uint8_t length){$/;"	f	file:
copy_hs_hash	dtls.c	/^static void copy_hs_hash(dtls_peer_t * peer, dtls_hash_ctx * hs_hash)$/;"	f	file:
count	tests/dtls-client.c	/^static unsigned int count = 0;$/;"	v	file:
count	uthash.h	/^   unsigned count;$/;"	m	struct:UT_hash_bucket
crypto_init	crypto.c	/^void crypto_init()$/;"	f
ctx	crypto.h	/^  rijndael_ctx ctx;		       \/**< AES-128 encryption context *\/$/;"	m	struct:__anon16
curve	dtls.h	/^  dtls_ecdh_curve curve;$/;"	m	struct:dtls_ecdsa_key_t
data	crypto.h	/^  aes128_ccm_t data;		\/**< The crypto context *\/$/;"	m	struct:dtls_cipher_context_t
data	hmac.h	/^  dtls_hash_ctx data;		          \/**< context for hash function *\/$/;"	m	struct:__anon13
data	netq.h	/^  netq_packet_t data;		\/**< the datagram to send *\/$/;"	m	struct:netq_t
data	netq.h	/^  unsigned char data[];		\/**< the datagram to send *\/$/;"	m	struct:netq_t
data	tests/ccm-testdata.c	/^struct test_vector data[] = {$/;"	v	typeref:struct:test_vector
datarootdir	doc/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
decrypt_verify	dtls.c	/^static int decrypt_verify(dtls_peer_t * peer, uint8 * packet, size_t length, uint8 ** cleartext)$/;"	f	file:
dk	aes/rijndael.h	/^	aes_u32	dk[4*(AES_MAXROUNDS + 1)];	\/* decrypt key schedule *\/$/;"	m	struct:__anon25
do_client_auth	crypto.h	/^  unsigned int do_client_auth:1;$/;"	m	struct:__anon20
doc	Makefile	/^doc:=doc$/;"	m
docdir	doc/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
doubleTest	ecc/testecc.c	/^void doubleTest(){$/;"	f
dsrv_log	debug.c	/^void dsrv_log(log_t level, char *format, ...)$/;"	f
dsrv_log	debug.h	/^static inline void dsrv_log(log_t level, char *format, ...)$/;"	f
dsrv_log	debug.h	90;"	d
dsrv_print_addr	debug.c	/^static size_t dsrv_print_addr(const session_t * addr, char *buf, size_t len)$/;"	f	file:
dtls_add_ecdsa_signature_elem	dtls.c	/^static uint8 *dtls_add_ecdsa_signature_elem(uint8 * p, uint32_t * point_r, uint32_t * point_s)$/;"	f	file:
dtls_add_peer	dtls.c	/^static void dtls_add_peer(dtls_context_t * ctx, dtls_peer_t * peer)$/;"	f	file:
dtls_alert	debug.h	134;"	d
dtls_alert_create	alert.h	/^dtls_alert_create(dtls_alert_level_t level, dtls_alert_t desc)$/;"	f
dtls_alert_fatal_create	alert.h	/^dtls_alert_fatal_create(dtls_alert_t desc)$/;"	f
dtls_alert_level_t	alert.h	/^} dtls_alert_level_t;$/;"	t	typeref:enum:__anon6
dtls_alert_send_from_err	dtls.c	/^static int dtls_alert_send_from_err(dtls_context_t * ctx, dtls_peer_t * peer, session_t * session, int err)$/;"	f	file:
dtls_alert_t	alert.h	/^} dtls_alert_t;$/;"	t	typeref:enum:__anon7
dtls_ccm_decrypt	crypto.c	/^dtls_ccm_decrypt(aes128_ccm_t * ccm_ctx, const unsigned char *src,$/;"	f	file:
dtls_ccm_decrypt_message	ccm.c	/^dtls_ccm_decrypt_message(rijndael_ctx * ctx, size_t M, size_t L,$/;"	f
dtls_ccm_encrypt	crypto.c	/^dtls_ccm_encrypt(aes128_ccm_t * ccm_ctx, const unsigned char *src,$/;"	f	file:
dtls_ccm_encrypt_message	ccm.c	/^dtls_ccm_encrypt_message(rijndael_ctx * ctx, size_t M, size_t L,$/;"	f
dtls_check_ecdsa_signature_elem	dtls.c	/^dtls_check_ecdsa_signature_elem(uint8 * data, size_t data_length, unsigned char **result_r, unsigned char **result_s)$/;"	f	file:
dtls_check_retransmit	dtls.c	/^void dtls_check_retransmit(dtls_context_t * context, clock_time_t * next)$/;"	f
dtls_check_tls_extension	dtls.c	/^static int dtls_check_tls_extension(dtls_peer_t * peer, uint8 * data, size_t data_length, int client_hello)$/;"	f	file:
dtls_cipher_context_get	crypto.c	/^static struct dtls_cipher_context_t *dtls_cipher_context_get(void)$/;"	f	file:
dtls_cipher_context_release	crypto.c	/^static void dtls_cipher_context_release(void)$/;"	f	file:
dtls_cipher_context_t	crypto.h	/^typedef struct dtls_cipher_context_t {$/;"	s
dtls_cipher_context_t	crypto.h	/^} dtls_cipher_context_t;$/;"	t	typeref:struct:dtls_cipher_context_t
dtls_cipher_t	global.h	/^} dtls_cipher_t;$/;"	t	typeref:enum:__anon10
dtls_client_hello_t	dtls.h	/^} dtls_client_hello_t;$/;"	t	typeref:struct:__anon4
dtls_clock_init	dtls_time.c	/^void dtls_clock_init(void)$/;"	f
dtls_clock_offset	dtls_time.c	/^clock_time_t dtls_clock_offset;$/;"	v
dtls_clock_offset	dtls_time.c	/^time_t dtls_clock_offset;$/;"	v
dtls_close	dtls.c	/^int dtls_close(dtls_context_t * ctx, const session_t * remote)$/;"	f
dtls_compression_t	global.h	/^} dtls_compression_t;$/;"	t	typeref:enum:__anon11
dtls_connect	dtls.c	/^int dtls_connect(dtls_context_t * ctx, const session_t * dst)$/;"	f
dtls_connect_peer	dtls.c	/^int dtls_connect_peer(dtls_context_t * ctx, dtls_peer_t * peer)$/;"	f
dtls_context	examples/contiki/dtls-client.c	/^static dtls_context_t *dtls_context;$/;"	v	file:
dtls_context	examples/contiki/dtls-server.c	/^static dtls_context_t *dtls_context;$/;"	v	file:
dtls_context	tests/dtls-client.c	/^static dtls_context_t *dtls_context = NULL;$/;"	v	file:
dtls_context_t	dtls.h	/^typedef struct dtls_context_t {$/;"	s
dtls_context_t	dtls.h	/^} dtls_context_t;$/;"	t	typeref:struct:dtls_context_t
dtls_create_cookie	dtls.c	/^dtls_create_cookie(dtls_context_t * ctx, session_t * session, uint8 * msg, size_t msglen, uint8 * cookie, int *clen)$/;"	f	file:
dtls_credentials_type_t	dtls.h	/^typedef enum dtls_credentials_type_t {$/;"	g
dtls_credentials_type_t	dtls.h	/^} dtls_credentials_type_t;$/;"	t	typeref:enum:dtls_credentials_type_t
dtls_crit	debug.h	135;"	d
dtls_crypto_alg	crypto.h	/^} dtls_crypto_alg;$/;"	t	typeref:enum:__anon14
dtls_debug	debug.h	139;"	d
dtls_debug_dump	debug.h	141;"	d
dtls_debug_hexdump	debug.h	140;"	d
dtls_debug_keyblock	dtls.c	/^static void dtls_debug_keyblock(dtls_security_parameters_t * config)$/;"	f	file:
dtls_decrypt	crypto.c	/^dtls_decrypt(const unsigned char *src, size_t length,$/;"	f
dtls_destroy_peer	dtls.c	/^static void dtls_destroy_peer(dtls_context_t * ctx, dtls_peer_t * peer, int unlink)$/;"	f	file:
dtls_dsrv_hexdump_log	debug.c	/^void dtls_dsrv_hexdump_log(log_t level, const char *name, const unsigned char *buf, size_t length, int extend)$/;"	f
dtls_dsrv_hexdump_log	debug.h	/^dtls_dsrv_hexdump_log(log_t level, const char *name, const unsigned char *buf, size_t length, int extend)$/;"	f
dtls_dsrv_log_addr	debug.c	/^void dtls_dsrv_log_addr(log_t level, const char *name, const session_t * addr)$/;"	f
dtls_dsrv_log_addr	debug.h	/^dtls_dsrv_log_addr(log_t level, const char *name, const struct __session_t *addr)$/;"	f
dtls_ec_key_from_uint32	crypto.c	/^static void dtls_ec_key_from_uint32(const uint32_t * key, size_t key_size, unsigned char *result)$/;"	f	file:
dtls_ec_key_from_uint32_asn1	crypto.c	/^int dtls_ec_key_from_uint32_asn1(const uint32_t * key, size_t key_size, unsigned char *buf)$/;"	f
dtls_ec_key_to_uint32	crypto.c	/^static void dtls_ec_key_to_uint32(const unsigned char *key, size_t key_size, uint32_t * result)$/;"	f	file:
dtls_ecdh_curve	crypto.h	/^} dtls_ecdh_curve;$/;"	t	typeref:enum:__anon15
dtls_ecdh_pre_master_secret	crypto.c	/^dtls_ecdh_pre_master_secret(unsigned char *priv_key,$/;"	f
dtls_ecdsa_create_sig	crypto.c	/^dtls_ecdsa_create_sig(const unsigned char *priv_key, size_t key_size,$/;"	f
dtls_ecdsa_create_sig_hash	crypto.c	/^dtls_ecdsa_create_sig_hash(const unsigned char *priv_key, size_t key_size,$/;"	f
dtls_ecdsa_generate_key	crypto.c	/^dtls_ecdsa_generate_key(unsigned char *priv_key, unsigned char *pub_key_x, unsigned char *pub_key_y, size_t key_size)$/;"	f
dtls_ecdsa_key_t	dtls.h	/^typedef struct dtls_ecdsa_key_t {$/;"	s
dtls_ecdsa_key_t	dtls.h	/^} dtls_ecdsa_key_t;$/;"	t	typeref:struct:dtls_ecdsa_key_t
dtls_ecdsa_verify_sig	crypto.c	/^dtls_ecdsa_verify_sig(const unsigned char *pub_key_x,$/;"	f
dtls_ecdsa_verify_sig_hash	crypto.c	/^dtls_ecdsa_verify_sig_hash(const unsigned char *pub_key_x,$/;"	f
dtls_emerg	debug.h	133;"	d
dtls_encrypt	crypto.c	/^dtls_encrypt(const unsigned char *src, size_t length,$/;"	f
dtls_fls	global.h	/^dtls_fls(unsigned int i) {$/;"	f
dtls_fls	global.h	136;"	d
dtls_free_context	dtls.c	/^void dtls_free_context(dtls_context_t * ctx)$/;"	f
dtls_free_peer	peer.c	/^void dtls_free_peer(dtls_peer_t * peer)$/;"	f
dtls_get_app_data	dtls.h	259;"	d
dtls_get_content_type	dtls.c	58;"	d	file:
dtls_get_cookie	dtls.c	/^static int dtls_get_cookie(uint8 * msg, size_t msglen, uint8 ** cookie)$/;"	f	file:
dtls_get_epoch	dtls.c	60;"	d	file:
dtls_get_fragment_length	dtls.c	62;"	d	file:
dtls_get_log_level	debug.c	/^log_t dtls_get_log_level()$/;"	f
dtls_get_log_level	debug.h	/^static inline log_t dtls_get_log_level()$/;"	f
dtls_get_peer	dtls.c	/^dtls_peer_t *dtls_get_peer(const dtls_context_t * ctx, const session_t * session)$/;"	f
dtls_get_sequence_number	dtls.c	61;"	d	file:
dtls_get_version	dtls.c	59;"	d	file:
dtls_handle_message	dtls.c	/^int dtls_handle_message(dtls_context_t * ctx, session_t * session, uint8 * msg, int msglen)$/;"	f
dtls_handle_read	examples/contiki/dtls-client.c	/^dtls_handle_read(dtls_context_t *ctx) {$/;"	f	file:
dtls_handle_read	examples/contiki/dtls-server.c	/^dtls_handle_read(dtls_context_t *ctx) {$/;"	f	file:
dtls_handle_read	tests/dtls-client.c	/^static int dtls_handle_read(struct dtls_context_t *ctx)$/;"	f	file:
dtls_handle_read	tests/dtls-server.c	/^static int dtls_handle_read(struct dtls_context_t *ctx)$/;"	f	file:
dtls_handle_signal	tests/dtls-client.c	/^static void dtls_handle_signal(int sig)$/;"	f	file:
dtls_handler_t	dtls.h	/^} dtls_handler_t;$/;"	t	typeref:struct:__anon1
dtls_handshake_dealloc	crypto.c	/^static void dtls_handshake_dealloc(dtls_handshake_parameters_t * handshake)$/;"	f	file:
dtls_handshake_free	crypto.c	/^void dtls_handshake_free(dtls_handshake_parameters_t * handshake)$/;"	f
dtls_handshake_header_t	dtls.h	/^} dtls_handshake_header_t;$/;"	t	typeref:struct:__anon3
dtls_handshake_malloc	crypto.c	/^static dtls_handshake_parameters_t *dtls_handshake_malloc()$/;"	f	file:
dtls_handshake_new	crypto.c	/^dtls_handshake_parameters_t *dtls_handshake_new()$/;"	f
dtls_handshake_parameters_ecdsa_t	crypto.h	/^} dtls_handshake_parameters_ecdsa_t;$/;"	t	typeref:struct:__anon17
dtls_handshake_parameters_psk_t	crypto.h	/^} dtls_handshake_parameters_psk_t;$/;"	t	typeref:struct:__anon18
dtls_handshake_parameters_t	crypto.h	/^} dtls_handshake_parameters_t;$/;"	t	typeref:struct:__anon20
dtls_handshake_type_to_name	dtls.c	/^static char *dtls_handshake_type_to_name(int type)$/;"	f	file:
dtls_hash_ctx	hmac.h	/^typedef SHA256_CTX dtls_hash_ctx;$/;"	t
dtls_hash_finalize	hmac.h	/^dtls_hash_finalize(unsigned char *buf, dtls_hash_t ctx) {$/;"	f
dtls_hash_init	hmac.h	/^dtls_hash_init(dtls_hash_t ctx) {$/;"	f
dtls_hash_t	hmac.h	/^typedef dtls_hash_ctx *dtls_hash_t;$/;"	t
dtls_hash_update	hmac.h	/^dtls_hash_update(dtls_hash_t ctx, const unsigned char *input, size_t len) {$/;"	f
dtls_hashfunc_t	hmac.h	/^} dtls_hashfunc_t;$/;"	t	typeref:enum:__anon12
dtls_hello_verify_t	dtls.h	/^} dtls_hello_verify_t;  $/;"	t	typeref:struct:__anon5
dtls_hmac_context_free	hmac.c	/^static inline void dtls_hmac_context_free(dtls_hmac_context_t * ctx)$/;"	f	file:
dtls_hmac_context_new	hmac.c	/^static inline dtls_hmac_context_t *dtls_hmac_context_new()$/;"	f	file:
dtls_hmac_context_t	hmac.h	/^} dtls_hmac_context_t;$/;"	t	typeref:struct:__anon13
dtls_hmac_finalize	hmac.c	/^int dtls_hmac_finalize(dtls_hmac_context_t * ctx, unsigned char *result)$/;"	f
dtls_hmac_free	hmac.c	/^void dtls_hmac_free(dtls_hmac_context_t * ctx)$/;"	f
dtls_hmac_init	hmac.c	/^void dtls_hmac_init(dtls_hmac_context_t * ctx, const unsigned char *key, size_t klen)$/;"	f
dtls_hmac_new	hmac.c	/^dtls_hmac_context_t *dtls_hmac_new(const unsigned char *key, size_t klen)$/;"	f
dtls_hmac_storage_init	hmac.c	/^void dtls_hmac_storage_init()$/;"	f
dtls_hmac_storage_init	hmac.h	/^static inline void dtls_hmac_storage_init()$/;"	f
dtls_hmac_update	hmac.c	/^void dtls_hmac_update(dtls_hmac_context_t * ctx, const unsigned char *input, size_t ilen)$/;"	f
dtls_hs_state_t	state.h	/^} dtls_hs_state_t;$/;"	t	typeref:struct:__anon9
dtls_info	debug.h	138;"	d
dtls_init	dtls.c	/^void dtls_init()$/;"	f
dtls_int_to_uint16	numeric.h	/^static inline int dtls_int_to_uint16(unsigned char *field, uint16_t value)$/;"	f
dtls_int_to_uint24	numeric.h	/^static inline int dtls_int_to_uint24(unsigned char *field, uint32_t value)$/;"	f
dtls_int_to_uint32	numeric.h	/^static inline int dtls_int_to_uint32(unsigned char *field, uint32_t value)$/;"	f
dtls_int_to_uint48	numeric.h	/^static inline int dtls_int_to_uint48(unsigned char *field, uint64_t value)$/;"	f
dtls_int_to_uint64	numeric.h	/^static inline int dtls_int_to_uint64(unsigned char *field, uint64_t value)$/;"	f
dtls_int_to_uint8	numeric.h	/^static inline int dtls_int_to_uint8(unsigned char *field, uint8_t value)$/;"	f
dtls_kb_client_iv	crypto.h	168;"	d
dtls_kb_client_mac_secret	crypto.h	143;"	d
dtls_kb_client_write_key	crypto.h	155;"	d
dtls_kb_digest_size	crypto.h	187;"	d
dtls_kb_iv_size	crypto.h	180;"	d
dtls_kb_key_size	crypto.h	167;"	d
dtls_kb_local_iv	crypto.h	176;"	d
dtls_kb_local_mac_secret	crypto.h	150;"	d
dtls_kb_local_write_key	crypto.h	163;"	d
dtls_kb_mac_secret_size	crypto.h	154;"	d
dtls_kb_remote_iv	crypto.h	172;"	d
dtls_kb_remote_mac_secret	crypto.h	146;"	d
dtls_kb_remote_write_key	crypto.h	159;"	d
dtls_kb_server_iv	crypto.h	170;"	d
dtls_kb_server_mac_secret	crypto.h	144;"	d
dtls_kb_server_write_key	crypto.h	157;"	d
dtls_kb_size	crypto.h	182;"	d
dtls_mac	crypto.c	/^dtls_mac(dtls_hmac_context_t * hmac_ctx,$/;"	f
dtls_malloc_peer	peer.c	/^static inline dtls_peer_t *dtls_malloc_peer()$/;"	f	file:
dtls_new_context	dtls.c	/^dtls_context_t *dtls_new_context(void *app_data)$/;"	f
dtls_new_peer	peer.c	/^dtls_peer_t *dtls_new_peer(const session_t * session)$/;"	f
dtls_notice	debug.h	137;"	d
dtls_p_hash	crypto.c	/^dtls_p_hash(dtls_hashfunc_t h,$/;"	f
dtls_package_name	debug.c	/^const char *dtls_package_name()$/;"	f
dtls_package_version	debug.c	/^const char *dtls_package_version()$/;"	f
dtls_peer_is_connected	peer.h	/^static inline int dtls_peer_is_connected(const dtls_peer_t *peer) {$/;"	f
dtls_peer_state	peer.h	/^static inline dtls_state_t dtls_peer_state(const dtls_peer_t *peer) {$/;"	f
dtls_peer_t	peer.h	/^typedef struct dtls_peer_t {$/;"	s
dtls_peer_t	peer.h	/^} dtls_peer_t;$/;"	t	typeref:struct:dtls_peer_t
dtls_peer_type	peer.h	/^typedef enum { DTLS_CLIENT=0, DTLS_SERVER } dtls_peer_type;$/;"	t	typeref:enum:__anon30
dtls_prepare_record	dtls.c	/^dtls_prepare_record(dtls_peer_t * peer,$/;"	f	file:
dtls_prf	crypto.c	/^dtls_prf(const unsigned char *key, size_t keylen,$/;"	f
dtls_prng	prng.h	/^dtls_prng(unsigned char *buf, size_t len) {$/;"	f
dtls_prng	prng.h	/^dtls_prng(unsigned char *buf, size_t len)$/;"	f
dtls_prng_init	prng.h	/^dtls_prng_init(unsigned short seed) {$/;"	f
dtls_psk_pre_master_secret	crypto.c	/^int dtls_psk_pre_master_secret(unsigned char *key, size_t keylen, unsigned char *result, size_t result_len)$/;"	f
dtls_record_header_t	dtls.h	/^} dtls_record_header_t;$/;"	t	typeref:struct:__anon2
dtls_renegotiate	dtls.c	/^int dtls_renegotiate(dtls_context_t * ctx, const session_t * dst)$/;"	f
dtls_retransmit	dtls.c	/^static void dtls_retransmit(dtls_context_t * context, netq_t * node)$/;"	f	file:
dtls_security_dealloc	crypto.c	/^static void dtls_security_dealloc(dtls_security_parameters_t * security)$/;"	f	file:
dtls_security_free	crypto.c	/^void dtls_security_free(dtls_security_parameters_t * security)$/;"	f
dtls_security_malloc	crypto.c	/^static dtls_security_parameters_t *dtls_security_malloc()$/;"	f	file:
dtls_security_new	crypto.c	/^dtls_security_parameters_t *dtls_security_new()$/;"	f
dtls_security_parameters_t	crypto.h	/^} dtls_security_parameters_t;$/;"	t	typeref:struct:__anon19
dtls_security_params	peer.h	/^static inline dtls_security_parameters_t *dtls_security_params(dtls_peer_t *peer)$/;"	f
dtls_security_params_epoch	peer.h	/^static inline dtls_security_parameters_t *dtls_security_params_epoch(dtls_peer_t *peer, uint16_t epoch)$/;"	f
dtls_security_params_free_other	peer.h	/^static inline void dtls_security_params_free_other(dtls_peer_t *peer)$/;"	f
dtls_security_params_next	peer.h	/^static inline dtls_security_parameters_t *dtls_security_params_next(dtls_peer_t *peer)$/;"	f
dtls_security_params_switch	peer.h	/^static inline void dtls_security_params_switch(dtls_peer_t *peer)$/;"	f
dtls_send	dtls.c	/^static int dtls_send(dtls_context_t * ctx, dtls_peer_t * peer, unsigned char type, uint8 * buf, size_t buflen)$/;"	f	file:
dtls_send_alert	dtls.c	/^dtls_send_alert(dtls_context_t * ctx, dtls_peer_t * peer, dtls_alert_level_t level, dtls_alert_t description)$/;"	f	file:
dtls_send_ccs	dtls.c	/^static inline int dtls_send_ccs(dtls_context_t * ctx, dtls_peer_t * peer)$/;"	f	file:
dtls_send_certificate_ecdsa	dtls.c	/^static int dtls_send_certificate_ecdsa(dtls_context_t * ctx, dtls_peer_t * peer, const dtls_ecdsa_key_t * key)$/;"	f	file:
dtls_send_certificate_verify_ecdh	dtls.c	/^static int dtls_send_certificate_verify_ecdh(dtls_context_t * ctx, dtls_peer_t * peer, const dtls_ecdsa_key_t * key)$/;"	f	file:
dtls_send_client_hello	dtls.c	/^static int dtls_send_client_hello(dtls_context_t * ctx, dtls_peer_t * peer, uint8 cookie[], size_t cookie_length)$/;"	f	file:
dtls_send_client_key_exchange	dtls.c	/^static int dtls_send_client_key_exchange(dtls_context_t * ctx, dtls_peer_t * peer)$/;"	f	file:
dtls_send_finished	dtls.c	/^static int dtls_send_finished(dtls_context_t * ctx, dtls_peer_t * peer, const unsigned char *label, size_t labellen)$/;"	f	file:
dtls_send_handshake_msg	dtls.c	/^dtls_send_handshake_msg(dtls_context_t * ctx, dtls_peer_t * peer, uint8 header_type, uint8 * data, size_t data_length)$/;"	f	file:
dtls_send_handshake_msg_hash	dtls.c	/^dtls_send_handshake_msg_hash(dtls_context_t * ctx,$/;"	f	file:
dtls_send_hello_request	dtls.c	/^static int dtls_send_hello_request(dtls_context_t * ctx, dtls_peer_t * peer)$/;"	f	file:
dtls_send_multi	dtls.c	/^dtls_send_multi(dtls_context_t * ctx, dtls_peer_t * peer,$/;"	f	file:
dtls_send_server_certificate_request	dtls.c	/^static int dtls_send_server_certificate_request(dtls_context_t * ctx, dtls_peer_t * peer)$/;"	f	file:
dtls_send_server_hello	dtls.c	/^static int dtls_send_server_hello(dtls_context_t * ctx, dtls_peer_t * peer)$/;"	f	file:
dtls_send_server_hello_done	dtls.c	/^static int dtls_send_server_hello_done(dtls_context_t * ctx, dtls_peer_t * peer)$/;"	f	file:
dtls_send_server_hello_msgs	dtls.c	/^static int dtls_send_server_hello_msgs(dtls_context_t * ctx, dtls_peer_t * peer)$/;"	f	file:
dtls_send_server_key_exchange_ecdh	dtls.c	/^static int dtls_send_server_key_exchange_ecdh(dtls_context_t * ctx, dtls_peer_t * peer, const dtls_ecdsa_key_t * key)$/;"	f	file:
dtls_send_server_key_exchange_psk	dtls.c	/^dtls_send_server_key_exchange_psk(dtls_context_t * ctx, dtls_peer_t * peer, const unsigned char *psk_hint, size_t len)$/;"	f	file:
dtls_session_equals	session.c	/^int dtls_session_equals(const session_t * a, const session_t * b)$/;"	f
dtls_session_init	session.c	/^void dtls_session_init(session_t * sess)$/;"	f
dtls_set_app_data	dtls.h	258;"	d
dtls_set_content_type	dtls.c	55;"	d	file:
dtls_set_handler	dtls.h	/^static inline void dtls_set_handler(dtls_context_t *ctx, dtls_handler_t *h) {$/;"	f
dtls_set_handshake_header	dtls.c	/^static inline uint8 *dtls_set_handshake_header(uint8 type, dtls_peer_t * peer,$/;"	f	file:
dtls_set_length	dtls.c	56;"	d	file:
dtls_set_log_level	debug.c	/^void dtls_set_log_level(log_t level)$/;"	f
dtls_set_log_level	debug.h	/^static inline void dtls_set_log_level(log_t level)$/;"	f
dtls_set_record_header	dtls.c	/^static inline uint8 *dtls_set_record_header(uint8 type, dtls_security_parameters_t * security, uint8 * buf)$/;"	f	file:
dtls_set_version	dtls.c	54;"	d	file:
dtls_state_t	state.h	/^} dtls_state_t;$/;"	t	typeref:enum:__anon8
dtls_stop_retransmission	dtls.c	/^static void dtls_stop_retransmission(dtls_context_t * context, dtls_peer_t * peer)$/;"	f	file:
dtls_str	tests/dtls-client.c	/^} dtls_str;$/;"	t	typeref:struct:__anon29	file:
dtls_strnlen	debug.c	/^static inline size_t dtls_strnlen(const char *s, size_t maxlen)$/;"	f	file:
dtls_tick_t	dtls_time.h	/^typedef clock_time_t dtls_tick_t;$/;"	t
dtls_ticks	dtls_time.c	/^void dtls_ticks(dtls_tick_t * t)$/;"	f
dtls_uint16_to_int	numeric.h	/^static inline uint16_t dtls_uint16_to_int(const unsigned char *field)$/;"	f
dtls_uint24_to_int	numeric.h	/^static inline uint32_t dtls_uint24_to_int(const unsigned char *field)$/;"	f
dtls_uint32_to_int	numeric.h	/^static inline uint32_t dtls_uint32_to_int(const unsigned char *field)$/;"	f
dtls_uint48_to_int	numeric.h	/^static inline uint64_t dtls_uint48_to_int(const unsigned char *field)$/;"	f
dtls_uint64_to_int	numeric.h	/^static inline uint64_t dtls_uint64_to_int(const unsigned char *field)$/;"	f
dtls_uint8_to_int	numeric.h	/^static inline uint8_t dtls_uint8_to_int(const unsigned char *field)$/;"	f
dtls_update_parameters	dtls.c	/^static int dtls_update_parameters(dtls_context_t * ctx, dtls_peer_t * peer, uint8 * data, size_t data_length)$/;"	f	file:
dtls_verify_peer	dtls.c	/^dtls_verify_peer(dtls_context_t * ctx, dtls_peer_t * peer, session_t * session, uint8 * data, size_t data_length)$/;"	f	file:
dtls_warn	debug.h	136;"	d
dtls_write	dtls.c	/^int dtls_write(struct dtls_context_t *ctx, session_t * dst, uint8 * buf, size_t len)$/;"	f
dump	debug.c	/^void dump(unsigned char *buf, size_t len)$/;"	f
dump	debug.h	/^static inline void dump(unsigned char *buf, size_t len)$/;"	f
dump	tests/ccm-test.c	/^void dump(unsigned char *buf, size_t len)$/;"	f
ec_add	ecc/ecc.c	/^void static ec_add(const uint32_t *px, const uint32_t *py, const uint32_t *qx, const uint32_t *qy, uint32_t *Sx, uint32_t *Sy){$/;"	f	file:
ec_double	ecc/ecc.c	/^void static ec_double(const uint32_t *px, const uint32_t *py, uint32_t *Dx, uint32_t *Dy){$/;"	f	file:
ecc_add	ecc/ecc.c	/^uint32_t ecc_add( const uint32_t *x, const uint32_t *y, uint32_t *result, uint8_t length)$/;"	f
ecc_copy	ecc/ecc.c	/^void ecc_copy(const uint32_t *from, uint32_t *to, uint8_t length)$/;"	f
ecc_ec_add	ecc/ecc.c	/^void ecc_ec_add(const uint32_t *px, const uint32_t *py, const uint32_t *qx, const uint32_t *qy, uint32_t *Sx, uint32_t *Sy)$/;"	f
ecc_ec_double	ecc/ecc.c	/^void ecc_ec_double(const uint32_t *px, const uint32_t *py, uint32_t *Dx, uint32_t *Dy)$/;"	f
ecc_ec_mult	ecc/ecc.c	/^void ecc_ec_mult(const uint32_t *px, const uint32_t *py, const uint32_t *secret, uint32_t *resultx, uint32_t *resulty){$/;"	f
ecc_ecdh	ecc/ecc.h	/^static inline void ecc_ecdh(const uint32_t *px, const uint32_t *py, const uint32_t *secret, uint32_t *resultx, uint32_t *resulty) {$/;"	f
ecc_ecdsa_sign	ecc/ecc.c	/^int ecc_ecdsa_sign(const uint32_t *d, const uint32_t *e, const uint32_t *k, uint32_t *r, uint32_t *s)$/;"	f
ecc_ecdsa_validate	ecc/ecc.c	/^int ecc_ecdsa_validate(const uint32_t *x, const uint32_t *y, const uint32_t *e, const uint32_t *r, const uint32_t *s)$/;"	f
ecc_fieldAdd	ecc/ecc.c	/^int ecc_fieldAdd(const uint32_t *x, const uint32_t *y, const uint32_t *reducer, uint32_t *result)$/;"	f
ecc_fieldInv	ecc/ecc.c	/^void ecc_fieldInv(const uint32_t *A, const uint32_t *modulus, const uint32_t *reducer, uint32_t *B)$/;"	f
ecc_fieldModO	ecc/ecc.c	/^void ecc_fieldModO(const uint32_t *A, uint32_t *result, uint8_t length)$/;"	f
ecc_fieldModP	ecc/ecc.c	/^void ecc_fieldModP(uint32_t *A, const uint32_t *B)$/;"	f
ecc_fieldMult	ecc/ecc.c	/^int ecc_fieldMult(const uint32_t *x, const uint32_t *y, uint32_t *result, uint8_t length)$/;"	f
ecc_fieldSub	ecc/ecc.c	/^int ecc_fieldSub(const uint32_t *x, const uint32_t *y, const uint32_t *modulus, uint32_t *result)$/;"	f
ecc_filed_test	ecc/testecc.c	/^AUTOSTART_PROCESSES(&ecc_filed_test);$/;"	v
ecc_filed_test	ecc/testfield.c	/^AUTOSTART_PROCESSES(&ecc_filed_test);$/;"	v
ecc_g_point_x	ecc/ecc.c	/^const uint32_t ecc_g_point_x[8] = { 0xD898C296, 0xF4A13945, 0x2DEB33A0, 0x77037D81,$/;"	v
ecc_g_point_y	ecc/ecc.c	/^const uint32_t ecc_g_point_y[8] = { 0x37BF51F5, 0xCBB64068, 0x6B315ECE, 0x2BCE3357,$/;"	v
ecc_gen_pub_key	ecc/ecc.h	/^static inline void ecc_gen_pub_key(const uint32_t *priv_key, uint32_t *pub_x, uint32_t *pub_y)$/;"	f
ecc_isGreater	ecc/ecc.c	/^int ecc_isGreater(const uint32_t *A, const uint32_t *B, uint8_t length)$/;"	f
ecc_isOne	ecc/ecc.c	/^int ecc_isOne(const uint32_t* A)$/;"	f
ecc_isSame	ecc/ecc.c	/^int ecc_isSame(const uint32_t *A, const uint32_t *B, uint8_t length)$/;"	f
ecc_is_valid_key	ecc/ecc.c	/^int ecc_is_valid_key(const uint32_t * priv_key)$/;"	f
ecc_order_k	ecc/ecc.c	/^static const uint8_t ecc_order_k = 8;$/;"	v	file:
ecc_order_m	ecc/ecc.c	/^static const uint32_t ecc_order_m[9] = {0xFC632551, 0xF3B9CAC2, 0xA7179E84, 0xBCE6FAAD,$/;"	v	file:
ecc_order_mu	ecc/ecc.c	/^static const uint32_t ecc_order_mu[9] = {0xEEDF9BFE, 0x012FFD85, 0xDF1A6C21, 0x43190552,$/;"	v	file:
ecc_order_r	ecc/ecc.c	/^static const uint32_t ecc_order_r[8] = {0x039CDAAF, 0x0C46353D, 0x58E8617B, 0x43190552,$/;"	v	file:
ecc_prime_m	ecc/ecc.c	/^static const uint32_t ecc_prime_m[8] = {0xffffffff, 0xffffffff, 0xffffffff, 0x00000000,$/;"	v	file:
ecc_prime_m	ecc/test_helper.c	/^const uint32_t ecc_prime_m[8] = {0xffffffff, 0xffffffff, 0xffffffff, 0x00000000,$/;"	v
ecc_prime_r	ecc/ecc.c	/^static const uint32_t ecc_prime_r[8] = {0x00000001, 0x00000000, 0x00000000, 0xffffffff,$/;"	v	file:
ecc_prime_r	ecc/test_helper.c	/^const uint32_t ecc_prime_r[8] = {0x00000001, 0x00000000, 0x00000000, 0xffffffff,$/;"	v
ecc_printNumber	ecc/test_helper.c	/^void ecc_printNumber(const uint32_t *x, int numberLength){ \/\/here the values are turned to MSB!$/;"	f
ecc_rshift	ecc/ecc.c	/^void ecc_rshift(uint32_t* A)$/;"	f
ecc_setRandom	ecc/test_helper.c	/^void ecc_setRandom(uint32_t *secret){$/;"	f
ecc_setZero	ecc/ecc.c	/^void ecc_setZero(uint32_t *A, const int length)$/;"	f
ecc_sub	ecc/ecc.c	/^uint32_t ecc_sub( const uint32_t *x, const uint32_t *y, uint32_t *result, uint8_t length)$/;"	f
eccdhTest	ecc/testecc.c	/^void eccdhTest(){$/;"	f
ecdsa	crypto.h	/^    dtls_handshake_parameters_ecdsa_t ecdsa;$/;"	m	union:__anon20::__anon22
ecdsaTest	ecc/testecc.c	/^void ecdsaTest() {$/;"	f
ecdsaTestMessage	ecc/testecc.c	/^static const uint32_t ecdsaTestMessage[] = { 0x65637572, 0x20612073, 0x68206F66, 0x20686173, 0x69732061, 0x68697320, 0x6F2C2054, 0x48616C6C};$/;"	v	file:
ecdsaTestRand1	ecc/testecc.c	/^static const uint32_t ecdsaTestRand1[] = { 0x1D1E1F20, 0x191A1B1C, 0x15161718, 0x11121314, 0x0D0E0F10, 0x090A0B0C, 0x05060708, 0x01020304};$/;"	v	file:
ecdsaTestRand2	ecc/testecc.c	/^static const uint32_t ecdsaTestRand2[] = { 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x01FFFFFF};$/;"	v	file:
ecdsaTestSecret	ecc/testecc.c	/^static const uint32_t ecdsaTestSecret[] = {0x94A949FA, 0x401455A1, 0xAD7294CA, 0x896A33BB, 0x7A80E714, 0x4321435B, 0x51247A14, 0x41C1CB6B};$/;"	v	file:
ecdsaTestresultR1	ecc/testecc.c	/^static const uint32_t ecdsaTestresultR1[] = { 0xC3B4035F, 0x515AD0A6, 0xBF375DCA, 0x0CC1E997, 0x7F54FDCD, 0x04D3FECA, 0xB9E396B9, 0x515C3D6E};$/;"	v	file:
ecdsaTestresultR2	ecc/testecc.c	/^static const uint32_t ecdsaTestresultR2[] = { 0x14146C91, 0xE878724D, 0xCD4FF928, 0xCC24BC04, 0xAC403390, 0x650C0060, 0x4A30B3F1, 0x9C69B726};$/;"	v	file:
ecdsaTestresultS1	ecc/testecc.c	/^static const uint32_t ecdsaTestresultS1[] = { 0x5366B1AB, 0x0F1DBF46, 0xB0C8D3C4, 0xDB755B6F, 0xB9BF9243, 0xE644A8BE, 0x55159A59, 0x6F9E52A6};$/;"	v	file:
ecdsaTestresultS2	ecc/testecc.c	/^static const uint32_t ecdsaTestresultS2[] = { 0x433AAB6F, 0x808250B1, 0xE46F90F4, 0xB342E972, 0x18B2F7E4, 0x2DB981A2, 0x6A288FA4, 0x41CF59DB};$/;"	v	file:
ecdsa_priv_key	examples/contiki/dtls-client.c	/^static const unsigned char ecdsa_priv_key[] = {$/;"	v	file:
ecdsa_priv_key	examples/contiki/dtls-server.c	/^static const unsigned char ecdsa_priv_key[] = {$/;"	v	file:
ecdsa_priv_key	tests/dtls-client.c	/^static const unsigned char ecdsa_priv_key[] = {$/;"	v	file:
ecdsa_priv_key	tests/dtls-server.c	/^static const unsigned char ecdsa_priv_key[] = {$/;"	v	file:
ecdsa_pub_key_x	examples/contiki/dtls-client.c	/^static const unsigned char ecdsa_pub_key_x[] = {$/;"	v	file:
ecdsa_pub_key_x	examples/contiki/dtls-server.c	/^static const unsigned char ecdsa_pub_key_x[] = {$/;"	v	file:
ecdsa_pub_key_x	tests/dtls-client.c	/^static const unsigned char ecdsa_pub_key_x[] = {$/;"	v	file:
ecdsa_pub_key_x	tests/dtls-server.c	/^static const unsigned char ecdsa_pub_key_x[] = {$/;"	v	file:
ecdsa_pub_key_y	examples/contiki/dtls-client.c	/^static const unsigned char ecdsa_pub_key_y[] = {$/;"	v	file:
ecdsa_pub_key_y	examples/contiki/dtls-server.c	/^static const unsigned char ecdsa_pub_key_y[] = {$/;"	v	file:
ecdsa_pub_key_y	tests/dtls-client.c	/^static const unsigned char ecdsa_pub_key_y[] = {$/;"	v	file:
ecdsa_pub_key_y	tests/dtls-server.c	/^static const unsigned char ecdsa_pub_key_y[] = {$/;"	v	file:
eight	ecc/testfield.c	/^uint32_t eight[8] = {	0x00000008,0x00000000,0x00000000,0x00000000,$/;"	v
ek	aes/rijndael.h	/^	aes_u32	ek[4*(AES_MAXROUNDS + 1)];	\/* encrypt key schedule *\/$/;"	m	struct:__anon25
enc_only	aes/rijndael.h	/^	int	enc_only;		\/* context contains only encrypt schedule *\/$/;"	m	struct:__anon25
encrypt	ccm.c	/^encrypt(rijndael_ctx * ctx, size_t L, unsigned long counter,$/;"	f	file:
epoch	crypto.h	/^  uint16_t epoch;	     \/**< counter for cipher state changes*\/$/;"	m	struct:__anon19
epoch	dtls.h	/^  uint16 epoch;		        \/**< counter for cipher state changes *\/$/;"	m	struct:__anon2
epoch	netq.h	/^  uint16_t epoch;$/;"	m	struct:netq_t
equals	global.h	/^equals(unsigned char *a, unsigned char *b, size_t len) {$/;"	f
event	dtls.h	/^  int (*event)(struct dtls_context_t *ctx, session_t *session, $/;"	m	struct:__anon1
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
expand_mult	uthash.h	/^   unsigned expand_mult;$/;"	m	struct:UT_hash_bucket
fd	tests/dtls-client.c	/^static int fd;$/;"	v	file:
fieldAdd	ecc/ecc.c	/^static int fieldAdd(const uint32_t *x, const uint32_t *y, const uint32_t *reducer, uint32_t *result){$/;"	f	file:
fieldAddAndDivide	ecc/ecc.c	/^static int fieldAddAndDivide(const uint32_t *x, const uint32_t *modulus, const uint32_t *reducer, uint32_t* result){$/;"	f	file:
fieldAddTest	ecc/testfield.c	/^void fieldAddTest(){$/;"	f
fieldInv	ecc/ecc.c	/^static void fieldInv(const uint32_t *A, const uint32_t *modulus, const uint32_t *reducer, uint32_t *B){$/;"	f	file:
fieldInvTest	ecc/testfield.c	/^void fieldInvTest(){$/;"	f
fieldModO	ecc/ecc.c	/^static void fieldModO(const uint32_t *A, uint32_t *result, uint8_t length) {$/;"	f	file:
fieldModOTest	ecc/testfield.c	/^void fieldModOTest(){$/;"	f
fieldModP	ecc/ecc.c	/^static void fieldModP(uint32_t *A, const uint32_t *B)$/;"	f	file:
fieldModPTest	ecc/testfield.c	/^void fieldModPTest(){$/;"	f
fieldMult	ecc/ecc.c	/^static int fieldMult(const uint32_t *x, const uint32_t *y, uint32_t *result, uint8_t length){$/;"	f	file:
fieldMultTest	ecc/testfield.c	/^void fieldMultTest(){$/;"	f
fieldSub	ecc/ecc.c	/^static int fieldSub(const uint32_t *x, const uint32_t *y, const uint32_t *modulus, uint32_t *result){$/;"	f	file:
fieldSubTest	ecc/testfield.c	/^void fieldSubTest(){$/;"	f
finalize_hs_hash	dtls.c	/^static inline size_t finalize_hs_hash(dtls_peer_t * peer, uint8 * buf)$/;"	f	file:
fls	tests/ccm-test.c	/^int fls(unsigned int i)$/;"	f
four	ecc/testfield.c	/^uint32_t four[8] = {0x00000004,0x00000000,0x00000000,0x00000000,$/;"	v
four64	ecc/testfield.c	/^uint32_t four64[16] = {	0x00000004,0x00000000,0x00000000,0x00000000,$/;"	v
fragment_length	dtls.h	/^  uint24 fragment_length;	\/**< Fragment length. *\/$/;"	m	struct:__anon3
fragment_offset	dtls.h	/^  uint24 fragment_offset;	\/**< Fragment offset. *\/$/;"	m	struct:__anon3
free_context	dtls.c	/^static inline void free_context(dtls_context_t * context)$/;"	f	file:
full	ecc/testfield.c	/^uint32_t full[8] = { 	0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,$/;"	v
get16bits	uthash.h	429;"	d
get16bits	uthash.h	432;"	d
get16bits	uthash.h	436;"	d
get_ecdsa_key	dtls.h	/^  int (*get_ecdsa_key)(struct dtls_context_t *ctx, $/;"	m	struct:__anon1
get_ecdsa_key	examples/contiki/dtls-client.c	/^get_ecdsa_key(struct dtls_context_t *ctx,$/;"	f	file:
get_ecdsa_key	examples/contiki/dtls-server.c	/^get_ecdsa_key(struct dtls_context_t *ctx,$/;"	f	file:
get_ecdsa_key	tests/dtls-client.c	/^static int get_ecdsa_key(struct dtls_context_t *ctx, const session_t * session, const dtls_ecdsa_key_t ** result)$/;"	f	file:
get_ecdsa_key	tests/dtls-server.c	/^static int get_ecdsa_key(struct dtls_context_t *ctx, const session_t * session, const dtls_ecdsa_key_t ** result)$/;"	f	file:
get_psk_info	dtls.h	/^  int (*get_psk_info)(struct dtls_context_t *ctx,$/;"	m	struct:__anon1
get_psk_info	examples/contiki/dtls-client.c	/^get_psk_info(struct dtls_context_t *ctx UNUSED_PARAM,$/;"	f	file:
get_psk_info	examples/contiki/dtls-server.c	/^get_psk_info(struct dtls_context_t *ctx, const session_t *session,$/;"	f	file:
get_psk_info	tests/dtls-client.c	/^get_psk_info(struct dtls_context_t *ctx UNUSED_PARAM,$/;"	f	file:
get_psk_info	tests/dtls-server.c	/^get_psk_info(struct dtls_context_t *ctx, const session_t * session,$/;"	f	file:
gmt_random	dtls.h	/^  uint32 gmt_random;	  \/**< GMT time of the random byte creation *\/$/;"	m	struct:__anon4
h	dtls.h	/^  dtls_handler_t *h;		\/**< callback handlers *\/$/;"	m	struct:dtls_context_t
handle_alert	dtls.c	/^handle_alert(dtls_context_t * ctx, dtls_peer_t * peer, uint8 * record_header, uint8 * data, size_t data_length)$/;"	f	file:
handle_ccs	dtls.c	/^static int handle_ccs(dtls_context_t * ctx, dtls_peer_t * peer, uint8 * record_header, uint8 * data, size_t data_length)$/;"	f	file:
handle_handshake	dtls.c	/^handle_handshake(dtls_context_t * ctx, dtls_peer_t * peer,$/;"	f	file:
handle_handshake_msg	dtls.c	/^handle_handshake_msg(dtls_context_t * ctx, dtls_peer_t * peer,$/;"	f	file:
handshake_params	peer.h	/^  dtls_handshake_parameters_t *handshake_params;$/;"	m	struct:dtls_peer_t
hashv	uthash.h	/^   unsigned hashv;                   \/* result of hash-fcn(key)        *\/$/;"	m	struct:UT_hash_handle
hexdump	debug.c	/^void hexdump(const unsigned char *packet, int length)$/;"	f
hexdump	debug.h	/^static inline void hexdump(const unsigned char *packet, int length)$/;"	f
hh	peer.h	/^  UT_hash_handle hh;$/;"	m	struct:dtls_peer_t
hh_head	uthash.h	/^   struct UT_hash_handle *hh_head;$/;"	m	struct:UT_hash_bucket	typeref:struct:UT_hash_bucket::UT_hash_handle
hh_next	uthash.h	/^   struct UT_hash_handle *hh_next;   \/* next hh in bucket order        *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_handle
hh_prev	uthash.h	/^   struct UT_hash_handle *hh_prev;   \/* previous hh in bucket order    *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_handle
hho	uthash.h	/^   ptrdiff_t hho; \/* hash handle offset (byte pos of hash handle in element *\/$/;"	m	struct:UT_hash_table
hs_hash	state.h	/^  dtls_hash_ctx hs_hash;$/;"	m	struct:__anon9
hs_state	crypto.h	/^  dtls_hs_state_t hs_state;  \/**< handshake protocol status *\/$/;"	m	struct:__anon20
htmldir	doc/Makefile	/^htmldir = ${docdir}$/;"	m
id_length	crypto.h	/^  uint16_t id_length;$/;"	m	struct:__anon18
ideal_chain_maxlen	uthash.h	/^   unsigned ideal_chain_maxlen;$/;"	m	struct:UT_hash_table
identity	crypto.h	/^  unsigned char identity[DTLS_PSK_MAX_CLIENT_IDENTITY_LEN];$/;"	m	struct:__anon18
ifindex	session.h	/^  int ifindex;$/;"	m	struct:__anon26
ifindex	session.h	/^  uint8_t ifindex;$/;"	m	struct:__anon27
includedir	Makefile	/^includedir = ${prefix}\/include\/tinydtls$/;"	m
ineff_expands	uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table
init_dtls	examples/contiki/dtls-client.c	/^init_dtls(session_t *dst) {$/;"	f
init_dtls	examples/contiki/dtls-server.c	/^init_dtls() {$/;"	f
install	Makefile	/^install := cp$/;"	m
isGreater	ecc/ecc.c	/^static int isGreater(const uint32_t *A, const uint32_t *B, uint8_t length){$/;"	f	file:
isOne	ecc/ecc.c	/^static int isOne(const uint32_t* A){$/;"	f	file:
isSame	ecc/ecc.c	/^static int isSame(const uint32_t *A, const uint32_t *B, uint8_t length){$/;"	f	file:
isZero	ecc/ecc.c	/^static int isZero(const uint32_t* A){$/;"	f	file:
is_ecdsa_client_auth_supported	dtls.c	/^static inline int is_ecdsa_client_auth_supported(dtls_context_t * ctx)$/;"	f	file:
is_ecdsa_supported	dtls.c	/^static inline int is_ecdsa_supported(dtls_context_t * ctx, int is_client)$/;"	f	file:
is_psk_supported	dtls.c	/^static inline int is_psk_supported(dtls_context_t * ctx)$/;"	f	file:
is_record	dtls.c	/^static unsigned int is_record(uint8 * msg, size_t msglen)$/;"	f	file:
is_tls_ecdhe_ecdsa_with_aes_128_ccm_8	dtls.c	/^static inline int is_tls_ecdhe_ecdsa_with_aes_128_ccm_8(dtls_cipher_t cipher)$/;"	f	file:
is_tls_psk_with_aes_128_ccm_8	dtls.c	/^static inline int is_tls_psk_with_aes_128_ccm_8(dtls_cipher_t cipher)$/;"	f	file:
key	tests/ccm-testdata.c	/^    unsigned char key[DTLS_CCM_BLOCKSIZE];$/;"	m	struct:test_vector	file:
key	uthash.h	/^   void *key;                        \/* ptr to enclosing struct's key  *\/$/;"	m	struct:UT_hash_handle
keyLengthInBytes	ecc/ecc.h	40;"	d
key_block	crypto.h	/^  uint8 key_block[MAX_KEYBLOCK_LENGTH];$/;"	m	struct:__anon19
keylen	uthash.h	/^   unsigned keylen;                  \/* enclosing struct's key len     *\/$/;"	m	struct:UT_hash_handle
keyx	crypto.h	/^  } keyx;$/;"	m	struct:__anon20	typeref:union:__anon20::__anon22
known_cipher	dtls.c	/^static int known_cipher(dtls_context_t * ctx, dtls_cipher_t code, int is_client)$/;"	f	file:
la	tests/ccm-testdata.c	/^    size_t la;			\/* number of bytes additional data *\/$/;"	m	struct:test_vector	file:
len	tests/dtls-client.c	/^static size_t len = 0;$/;"	v	file:
length	dtls.h	/^  uint16 length;		\/**< length of the following fragment *\/$/;"	m	struct:__anon2
length	dtls.h	/^  uint24 length;  \/**< length of this message *\/$/;"	m	struct:__anon3
length	netq.h	/^  size_t length;		\/**< actual length of data *\/$/;"	m	struct:netq_t
length	tests/dtls-client.c	/^    size_t length;		\/* length of string *\/$/;"	m	struct:__anon29	file:
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
list	t_list.h	/^struct list {$/;"	s
list_add	t_list.h	/^list_add(list_t list, void *item) {$/;"	f
list_head	t_list.h	/^list_head(list_t list) {$/;"	f
list_insert	t_list.h	/^list_insert(list_t list, void *previtem, void *newitem) {$/;"	f
list_item_next	t_list.h	/^list_item_next(void *item)$/;"	f
list_pop	t_list.h	/^list_pop(list_t list) {$/;"	f
list_push	t_list.h	/^list_push(list_t list, void *item) {$/;"	f
list_remove	t_list.h	/^list_remove(list_t list, void *item) {$/;"	f
list_t	t_list.h	/^typedef void **list_t;$/;"	t
lm	tests/ccm-testdata.c	/^    size_t lm;			\/* overall message length *\/$/;"	m	struct:test_vector	file:
log2_num_buckets	uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table
log_t	debug.h	/^} log_t;$/;"	t	typeref:enum:__anon24
loglevels	debug.c	/^static char *loglevels[] = {$/;"	v	file:
mac	ccm.c	/^mac(rijndael_ctx * ctx,$/;"	f	file:
main	ecc/testecc.c	/^int main(int argc, char const *argv[])$/;"	f
main	ecc/testfield.c	/^int main(int argc, char const *argv[])$/;"	f
main	hmac.c	/^int main(int argc, char **argv)$/;"	f
main	sha2/sha2prog.c	/^int main(int argc, char **argv) {$/;"	f
main	sha2/sha2speed.c	/^int main(int argc, char **argv) {$/;"	f
main	tests/dtls-client.c	/^int main(int argc, char **argv)$/;"	f
main	tests/dtls-server.c	/^int main(int argc, char **argv)$/;"	f
main	tests/prf-test.c	/^int main()$/;"	f
malloc_context	dtls.c	/^static inline dtls_context_t *malloc_context()$/;"	f	file:
master_secret	crypto.h	/^    uint8 master_secret[DTLS_MASTER_SECRET_LENGTH];$/;"	m	union:__anon20::__anon21
max	numeric.h	36;"	d
maxlog	debug.c	/^static int maxlog = DTLS_LOG_WARN;	\/* default maximum log level *\/$/;"	v	file:
memxor	global.h	/^memxor(unsigned char *x, const unsigned char *y, size_t n) {$/;"	f
message_seq	dtls.h	/^  uint16 message_seq; 	\/**< Message sequence number *\/$/;"	m	struct:__anon3
mi_rand	mi_util.c	/^unsigned int mi_rand()$/;"	f
mi_sessiondone	mi_util.c	/^int mi_sessiondone = 0;$/;"	v
mi_sessiondone	mi_util.h	/^int mi_sessiondone;$/;"	v
min	debug.c	114;"	d	file:
min	numeric.h	32;"	d
mseq_r	state.h	/^  uint16_t mseq_r;	     \/**< received handshake message sequence number counter *\/$/;"	m	struct:__anon9
mseq_s	state.h	/^  uint16_t mseq_s;	     \/**< send handshake message sequence number counter *\/$/;"	m	struct:__anon9
msg	tests/ccm-testdata.c	/^    unsigned char msg[200];$/;"	m	struct:test_vector	file:
msg_type	dtls.h	/^  uint8 msg_type; \/**< Type of handshake message  (one of DTLS_HT_) *\/$/;"	m	struct:__anon3
multTest	ecc/testecc.c	/^void multTest(){$/;"	f
mycookie	dtls.c	1583;"	d	file:
mycookie	dtls.c	1584;"	d	file:
mycookie	dtls.c	1643;"	d	file:
netq_delete_all	netq.c	/^void netq_delete_all(list_t queue)$/;"	f
netq_free_node	netq.c	/^static inline void netq_free_node(netq_t * node)$/;"	f	file:
netq_head	netq.c	/^netq_t *netq_head(list_t queue)$/;"	f
netq_init	netq.c	/^void netq_init()$/;"	f
netq_init	netq.h	/^static inline void netq_init()$/;"	f
netq_insert_node	netq.c	/^int netq_insert_node(list_t queue, netq_t * node)$/;"	f
netq_malloc_node	netq.c	/^static inline netq_t *netq_malloc_node(size_t size)$/;"	f	file:
netq_next	netq.c	/^netq_t *netq_next(netq_t * p)$/;"	f
netq_node_free	netq.c	/^void netq_node_free(netq_t * node)$/;"	f
netq_node_new	netq.c	/^netq_t *netq_node_new(size_t size)$/;"	f
netq_packet_t	netq.h	/^typedef unsigned char netq_packet_t[DTLS_MAX_BUF];$/;"	t
netq_pop_first	netq.c	/^netq_t *netq_pop_first(list_t queue)$/;"	f
netq_remove	netq.c	/^void netq_remove(list_t queue, netq_t * p)$/;"	f
netq_t	netq.h	/^typedef struct netq_t {$/;"	s
netq_t	netq.h	/^} netq_t;$/;"	t	typeref:struct:netq_t
next	netq.h	/^  struct netq_t *next;$/;"	m	struct:netq_t	typeref:struct:netq_t::netq_t
next	t_list.h	/^  struct list *next;$/;"	m	struct:list	typeref:struct:list::list
next	uthash.h	/^   void *next;                       \/* next element in app order      *\/$/;"	m	struct:UT_hash_handle
noexpand	uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table
nonce	tests/ccm-testdata.c	/^    unsigned char nonce[DTLS_CCM_BLOCKSIZE];$/;"	m	struct:test_vector	file:
nonideal_items	uthash.h	/^   unsigned nonideal_items;$/;"	m	struct:UT_hash_table
null	ecc/testfield.c	/^uint32_t null[8] = {	0x00000000,0x00000000,0x00000000,0x00000000,$/;"	v
null64	ecc/testfield.c	/^uint32_t null64[16] = {	0x00000000,0x00000000,0x00000000,0x00000000,$/;"	v
nullEverything	ecc/testfield.c	/^void nullEverything(){$/;"	f
num_buckets	uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table
num_items	uthash.h	/^   unsigned num_items;$/;"	m	struct:UT_hash_table
one	ecc/testfield.c	/^uint32_t one[8] = {	0x00000001,0x00000000,0x00000000,0x00000000,$/;"	v
one64	ecc/testfield.c	/^uint32_t one64[16] = {	0x00000001,0x00000000,0x00000000,0x00000000,$/;"	v
orderMinusOne	ecc/testfield.c	/^static const uint32_t orderMinusOne[8] = {0xFC632550, 0xF3B9CAC2, 0xA7179E84, 0xBCE6FAAD,$/;"	v	file:
orderResultDoubleMod	ecc/testfield.c	/^static const uint32_t orderResultDoubleMod[8] = {0xFC63254F, 0xF3B9CAC2, 0xA7179E84, 0xBCE6FAAD, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0xFFFFFFFF};$/;"	v	file:
other_eph_pub_x	crypto.h	/^  uint8 other_eph_pub_x[32];$/;"	m	struct:__anon17
other_eph_pub_y	crypto.h	/^  uint8 other_eph_pub_y[32];$/;"	m	struct:__anon17
other_pub_x	crypto.h	/^  uint8 other_pub_x[32];$/;"	m	struct:__anon17
other_pub_y	crypto.h	/^  uint8 other_pub_y[32];$/;"	m	struct:__anon17
output_file	tests/dtls-client.c	/^static dtls_str output_file = { 0, NULL };	\/* output file name *\/$/;"	v	file:
own_eph_priv	crypto.h	/^  uint8 own_eph_priv[32];$/;"	m	struct:__anon17
package	Makefile	/^package = tinydtls-0.8.1$/;"	m
pad	hmac.h	/^  unsigned char pad[DTLS_HMAC_BLOCKSIZE]; \/**< ipad and opad storage *\/$/;"	m	struct:__anon13
peer	netq.h	/^  dtls_peer_t *peer;		\/**< remote address *\/$/;"	m	struct:netq_t
peer_init	peer.c	/^void peer_init()$/;"	f
peers	dtls.h	/^  dtls_peer_t *peers;		\/**< peer hash map *\/$/;"	m	struct:dtls_context_t
port	session.h	/^  unsigned short port;$/;"	m	struct:__anon26
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prefix	doc/Makefile	/^prefix = \/usr\/local$/;"	m
prev	uthash.h	/^   void *prev;                       \/* prev element in app order      *\/$/;"	m	struct:UT_hash_handle
prf_label_client	dtls.c	/^static const unsigned char prf_label_client[] = "client";$/;"	v	file:
prf_label_finished	dtls.c	/^static const unsigned char prf_label_finished[] = " finished";$/;"	v	file:
prf_label_key	dtls.c	/^static const unsigned char prf_label_key[] = "key expansion";$/;"	v	file:
prf_label_master	dtls.c	/^static const unsigned char prf_label_master[] = "master secret";$/;"	v	file:
prf_label_server	dtls.c	/^static const unsigned char prf_label_server[] = "server";$/;"	v	file:
primeMinusOne	ecc/testfield.c	/^uint32_t primeMinusOne[8]=	{	0xfffffffe,0xffffffff,0xffffffff,0x00000000,$/;"	v
print_local_addresses	examples/contiki/dtls-client.c	/^print_local_addresses(void)$/;"	f	file:
print_local_addresses	examples/contiki/dtls-server.c	/^print_local_addresses(void)$/;"	f	file:
print_timestamp	debug.c	/^static inline size_t print_timestamp(char *s, size_t len, clock_time_t t)$/;"	f	file:
print_timestamp	debug.c	/^static inline size_t print_timestamp(char *s, size_t len, time_t t)$/;"	f	file:
printspeed	sha2/sha2speed.c	/^void printspeed(char *caption, unsigned long bytes, double time) {$/;"	f
priv_key	dtls.h	/^  const unsigned char *priv_key;	\/** < private key as bytes > *\/$/;"	m	struct:dtls_ecdsa_key_t
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psk	crypto.h	/^    dtls_handshake_parameters_psk_t psk;$/;"	m	union:__anon20::__anon22
psk_id	examples/contiki/dtls-client.c	/^static unsigned char psk_id[PSK_ID_MAXLEN] = PSK_DEFAULT_IDENTITY;$/;"	v	file:
psk_id	tests/dtls-client.c	/^static unsigned char psk_id[PSK_ID_MAXLEN];$/;"	v	file:
psk_id_length	examples/contiki/dtls-client.c	/^static size_t psk_id_length = sizeof(PSK_DEFAULT_IDENTITY) - 1;$/;"	v	file:
psk_id_length	tests/dtls-client.c	/^static size_t psk_id_length = 0;$/;"	v	file:
psk_key	examples/contiki/dtls-client.c	/^static unsigned char psk_key[PSK_MAXLEN] = PSK_DEFAULT_KEY;$/;"	v	file:
psk_key	tests/dtls-client.c	/^static unsigned char psk_key[PSK_MAXLEN];$/;"	v	file:
psk_key_length	examples/contiki/dtls-client.c	/^static size_t psk_key_length = sizeof(PSK_DEFAULT_KEY) - 1;$/;"	v	file:
psk_key_length	tests/dtls-client.c	/^static size_t psk_key_length = 0;$/;"	v	file:
pub_key_x	dtls.h	/^  const unsigned char *pub_key_x;	\/** < x part of the public key for the given private key > *\/$/;"	m	struct:dtls_ecdsa_key_t
pub_key_y	dtls.h	/^  const unsigned char *pub_key_y;	\/** < y part of the public key for the given private key > *\/$/;"	m	struct:dtls_ecdsa_key_t
r_lm	tests/ccm-testdata.c	/^    size_t r_lm;		\/* overall result length *\/$/;"	m	struct:test_vector	file:
random	crypto.h	/^    } random;$/;"	m	union:__anon20::__anon21	typeref:struct:__anon20::__anon21::random_t
random	dtls.h	/^  unsigned char random[28];	\/**< Client random bytes *\/$/;"	m	struct:__anon4
random_t	crypto.h	/^    struct random_t {$/;"	s	union:__anon20::__anon21
rcon	aes/rijndael.c	/^static const aes_u32 rcon[] = {$/;"	v	file:
read	dtls.h	/^  int (*read)(struct dtls_context_t *ctx, $/;"	m	struct:__anon1
read_from_file	tests/dtls-client.c	/^ssize_t read_from_file(char *arg, unsigned char *buf, size_t max_buf_len)$/;"	f
read_from_peer	examples/contiki/dtls-client.c	/^read_from_peer(struct dtls_context_t *ctx, $/;"	f	file:
read_from_peer	examples/contiki/dtls-server.c	/^read_from_peer(struct dtls_context_t *ctx, $/;"	f	file:
read_from_peer	tests/dtls-client.c	/^static int read_from_peer(struct dtls_context_t *ctx, session_t * session, uint8 * data, size_t len)$/;"	f	file:
read_from_peer	tests/dtls-server.c	/^static int read_from_peer(struct dtls_context_t *ctx, session_t * session, uint8 * data, size_t len)$/;"	f	file:
readbuf	dtls.h	/^  unsigned char readbuf[DTLS_MAX_BUF];$/;"	m	struct:dtls_context_t
resolve_address	tests/dtls-client.c	/^static int resolve_address(const char *server, struct sockaddr *dst)$/;"	f	file:
resolve_address	tests/dtls-server.c	/^static int resolve_address(const char *server, struct sockaddr *dst)$/;"	f	file:
result	tests/ccm-testdata.c	/^    unsigned char result[200];	\/* result *\/$/;"	m	struct:test_vector	file:
resultAddx	ecc/testecc.c	/^uint32_t resultAddx[8] = {	0x545a067e, 0x553cf35a, 0xac476bd4, 0x70349191,$/;"	v
resultAddy	ecc/testecc.c	/^uint32_t resultAddy[8] = {	0x744ac264, 0x6d013011, 0x5aa5c9d4, 0xc33b1331,$/;"	v
resultDoubleMod	ecc/testfield.c	/^uint32_t resultDoubleMod[8] = { 0xfffffffd,0xffffffff,0xffffffff,0x00000000,$/;"	v
resultDoublex	ecc/testecc.c	/^uint32_t resultDoublex[8] = {	0xdb6127b0, 0x2a860ffc, 0xb17481b8, 0xdf6c22f3,$/;"	v
resultDoubley	ecc/testecc.c	/^uint32_t resultDoubley[8] = {	0xdb61d0c7, 0xe10ca2c1, 0xcd03023d, 0x389ef3ee,$/;"	v
resultFullAdd	ecc/testfield.c	/^uint32_t resultFullAdd[8] = {	0x00000001,0x00000000,0x00000000,0xFFFFFFFF,$/;"	v
resultFullMod	ecc/testfield.c	/^uint32_t resultFullMod[8] = { 	0x00000002,0x00000000,0xFFFFFFFF,0xFFFFFFFD,$/;"	v
resultMultx	ecc/testecc.c	/^uint32_t resultMultx[8] = {	0x4eeca03f, 0xacc89ba3, 0xcfc18bed, 0xe62becc3,$/;"	v
resultMulty	ecc/testecc.c	/^uint32_t resultMulty[8] = {	0x6a7b41d5, 0x35beca95, 0xa6c0cf30, 0x06f8fcf8,$/;"	v
resultQuadMod	ecc/testfield.c	/^uint32_t resultQuadMod[16] = {	0x00000004,0x00000000,0x00000000,0xFFFFFFFC,$/;"	v
retransmit_cnt	netq.h	/^  unsigned char retransmit_cnt;	\/**< retransmission counter, will be removed when zero *\/$/;"	m	struct:netq_t
retransmit_timer	dtls.h	/^  struct etimer retransmit_timer; \/**< fires when the next packet must be sent *\/$/;"	m	struct:dtls_context_t	typeref:struct:dtls_context_t::etimer
rijndaelDecrypt	aes/rijndael.c	/^rijndaelDecrypt(const aes_u32 rk[\/*4*(Nr + 1)*\/], int Nr, const aes_u8 ct[16],$/;"	f	file:
rijndaelEncrypt	aes/rijndael.c	/^rijndaelEncrypt(const aes_u32 rk[\/*4*(Nr + 1)*\/], int Nr, const aes_u8 pt[16],$/;"	f
rijndaelKeySetupDec	aes/rijndael.c	/^rijndaelKeySetupDec(aes_u32 rk[\/*4*(Nr + 1)*\/], const aes_u8 cipherKey[], int keyBits)$/;"	f
rijndaelKeySetupEnc	aes/rijndael.c	/^rijndaelKeySetupEnc(aes_u32 rk[\/*4*(Nr + 1)*\/], const aes_u8 cipherKey[], int keyBits)$/;"	f
rijndael_ctx	aes/rijndael.h	/^} rijndael_ctx;$/;"	t	typeref:struct:__anon25
rijndael_decrypt	aes/rijndael.c	/^rijndael_decrypt(rijndael_ctx *ctx, const u_char *src, u_char *dst)$/;"	f
rijndael_encrypt	aes/rijndael.c	/^rijndael_encrypt(rijndael_ctx *ctx, const u_char *src, u_char *dst)$/;"	f
rijndael_set_key	aes/rijndael.c	/^rijndael_set_key(rijndael_ctx *ctx, const u_char *key, int bits)$/;"	f
rijndael_set_key_enc_only	aes/rijndael.c	/^rijndael_set_key_enc_only(rijndael_ctx *ctx, const u_char *key, int bits)$/;"	f
role	peer.h	/^  dtls_peer_type role;       \/**< denotes if this host is DTLS_CLIENT or DTLS_SERVER *\/$/;"	m	struct:dtls_peer_t
rseq	crypto.h	/^  uint64_t rseq;	     \/**< sequence number of last record sent *\/$/;"	m	struct:__anon19
rshift	ecc/ecc.c	/^static void rshift(uint32_t* A){$/;"	f	file:
rshiftby	ecc/ecc.c	/^static void rshiftby(const uint32_t *in, uint8_t in_size, uint32_t *out, uint8_t out_size, uint8_t shift) {$/;"	f	file:
s	tests/dtls-client.c	/^    unsigned char *s;		\/* string data *\/$/;"	m	struct:__anon29	file:
sa	session.h	/^    struct sockaddr     sa;$/;"	m	union:__anon27::__anon28	typeref:struct:__anon27::__anon28::sockaddr
secret	ecc/testecc.c	/^uint32_t secret[8] = {	0x2ffb06fd, 0x6522468b, 0x3072708b, 0xd0c7a893,$/;"	v
security_params	peer.h	/^  dtls_security_parameters_t *security_params[2];$/;"	m	struct:dtls_peer_t
send_to_peer	examples/contiki/dtls-client.c	/^send_to_peer(struct dtls_context_t *ctx, $/;"	f	file:
send_to_peer	examples/contiki/dtls-server.c	/^send_to_peer(struct dtls_context_t *ctx, $/;"	f	file:
send_to_peer	tests/dtls-client.c	/^static int send_to_peer(struct dtls_context_t *ctx, session_t * session, uint8 * data, size_t len)$/;"	f	file:
send_to_peer	tests/dtls-server.c	/^static int send_to_peer(struct dtls_context_t *ctx, session_t * session, uint8 * data, size_t len)$/;"	f	file:
sequence_number	dtls.h	/^  uint48 sequence_number;       \/**< sequence number *\/$/;"	m	struct:__anon2
server	crypto.h	/^      uint8 server[DTLS_RANDOM_LENGTH];	\/**< server random gmt and bytes *\/$/;"	m	struct:__anon20::__anon21::random_t
server_conn	examples/contiki/dtls-server.c	/^static struct uip_udp_conn *server_conn;$/;"	v	typeref:struct:uip_udp_conn	file:
session	peer.h	/^  session_t session;	     \/**< peer address and local interface *\/$/;"	m	struct:dtls_peer_t
session_t	session.h	/^} session_t;$/;"	t	typeref:struct:__anon26
session_t	session.h	/^} session_t;$/;"	t	typeref:struct:__anon27
setZero	ecc/ecc.c	/^static void setZero(uint32_t *A, const int length){$/;"	f	file:
set_connection_address	examples/contiki/dtls-client.c	/^set_connection_address(uip_ipaddr_t *ipaddr)$/;"	f	file:
sha256_initial_hash_value	sha2/sha2.c	/^const static sha2_word32 sha256_initial_hash_value[8] = {$/;"	v	file:
sha2_byte	sha2/sha2.c	/^typedef u_int8_t  sha2_byte;	\/* Exactly 1 byte *\/$/;"	t	file:
sha2_byte	sha2/sha2.c	/^typedef uint8_t  sha2_byte;	\/* Exactly 1 byte *\/$/;"	t	file:
sha2_hex_digits	sha2/sha2.c	/^static const char *sha2_hex_digits = "0123456789abcdef";$/;"	v	file:
sha2_word32	sha2/sha2.c	/^typedef u_int32_t sha2_word32;	\/* Exactly 4 bytes *\/$/;"	t	file:
sha2_word32	sha2/sha2.c	/^typedef uint32_t sha2_word32;	\/* Exactly 4 bytes *\/$/;"	t	file:
sha2_word64	sha2/sha2.c	/^typedef u_int64_t sha2_word64;	\/* Exactly 8 bytes *\/$/;"	t	file:
sha2_word64	sha2/sha2.c	/^typedef uint64_t sha2_word64;	\/* Exactly 8 bytes *\/$/;"	t	file:
sha384_initial_hash_value	sha2/sha2.c	/^const static sha2_word64 sha384_initial_hash_value[8] = {$/;"	v	file:
sha512_initial_hash_value	sha2/sha2.c	/^const static sha2_word64 sha512_initial_hash_value[8] = {$/;"	v	file:
sigma0_256	sha2/sha2.c	234;"	d	file:
sigma0_512	sha2/sha2.c	240;"	d	file:
sigma1_256	sha2/sha2.c	235;"	d	file:
sigma1_512	sha2/sha2.c	241;"	d	file:
signature	uthash.h	/^   uint32_t signature; \/* used only to find hash tables in external analysis *\/$/;"	m	struct:UT_hash_table
sin	session.h	/^    struct sockaddr_in  sin;$/;"	m	union:__anon27::__anon28	typeref:struct:__anon27::__anon28::sockaddr_in
sin6	session.h	/^    struct sockaddr_in6 sin6;$/;"	m	union:__anon27::__anon28	typeref:struct:__anon27::__anon28::sockaddr_in6
six	ecc/testfield.c	/^uint32_t six[8] = {	0x00000006,0x00000000,0x00000000,0x00000000,$/;"	v
size	session.h	/^  socklen_t size;		\/**< size of addr *\/$/;"	m	struct:__anon27
size	session.h	/^  unsigned char size;$/;"	m	struct:__anon26
ssize_t	platform-specific/config-sky.h	/^typedef int ssize_t;$/;"	t
st	session.h	/^    struct sockaddr_storage st;$/;"	m	union:__anon27::__anon28	typeref:struct:__anon27::__anon28::sockaddr_storage
state	peer.h	/^  dtls_state_t state;        \/**< DTLS engine state *\/$/;"	m	struct:dtls_peer_t
state	sha2/sha2.h	/^	u_int32_t	state[8];$/;"	m	struct:_SHA256_CTX
state	sha2/sha2.h	/^	u_int64_t	state[8];$/;"	m	struct:_SHA512_CTX
state	sha2/sha2.h	/^	uint32_t	state[8];$/;"	m	struct:_SHA256_CTX
state	sha2/sha2.h	/^	uint64_t	state[8];$/;"	m	struct:_SHA512_CTX
sub	ecc/ecc.c	/^static uint32_t sub( const uint32_t *x, const uint32_t *y, uint32_t *result, uint8_t length){$/;"	f	file:
t	netq.h	/^  clock_time_t t;	        \/**< when to send PDU for the next time *\/$/;"	m	struct:netq_t
tail	uthash.h	/^   struct UT_hash_handle *tail; \/* tail hh in app order, for fast append    *\/$/;"	m	struct:UT_hash_table	typeref:struct:UT_hash_table::UT_hash_handle
tbl	uthash.h	/^   struct UT_hash_table *tbl;$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_table
temp	ecc/testfield.c	/^uint32_t temp[8];$/;"	v
temp2	ecc/testfield.c	/^uint32_t temp2[16];$/;"	v
test_assert	ecc/test_helper.c	/^test_assert(const char *file, int lineno)$/;"	f
test_vector	tests/ccm-testdata.c	/^struct test_vector {$/;"	s	file:
the_dtls_context	dtls.c	/^static dtls_context_t the_dtls_context;$/;"	v	file:
three	ecc/testfield.c	/^uint32_t three[8] = {	0x00000003,0x00000000,0x00000000,0x00000000,$/;"	v
timeout	netq.h	/^  unsigned int timeout;		\/**< randomized timeout value *\/$/;"	m	struct:netq_t
tmp	crypto.h	/^  } tmp;$/;"	m	struct:__anon20	typeref:union:__anon20::__anon21
top_builddir	Makefile	/^top_builddir = .$/;"	m
top_builddir	aes/Makefile	/^top_builddir = ..$/;"	m
top_builddir	doc/Makefile	/^top_builddir = ..$/;"	m
top_builddir	ecc/Makefile	/^top_builddir = ..$/;"	m
top_builddir	examples/contiki/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	platform-specific/Makefile	/^top_builddir = ..$/;"	m
top_builddir	sha2/Makefile	/^top_builddir = ..$/;"	m
top_builddir	tests/Makefile	/^top_builddir = ..$/;"	m
top_srcdir	aes/Makefile	/^top_srcdir:= ..$/;"	m
top_srcdir	ecc/Makefile	/^top_srcdir:= ..$/;"	m
top_srcdir	examples/contiki/Makefile	/^top_srcdir:= ..\/..$/;"	m
top_srcdir	sha2/Makefile	/^top_srcdir:= ..$/;"	m
top_srcdir	tests/Makefile	/^top_srcdir:= ..$/;"	m
try_send	examples/contiki/dtls-client.c	/^try_send(struct dtls_context_t *ctx, session_t *dst) {$/;"	f	file:
try_send	tests/dtls-client.c	/^static void try_send(struct dtls_context_t *ctx, session_t * dst, char *buf, int len)$/;"	f	file:
two	ecc/testfield.c	/^uint32_t two[8] = {	0x00000002,0x00000000,0x00000000,0x00000000,$/;"	v
two64	ecc/testfield.c	/^uint32_t two64[16] = {	0x00000002,0x00000000,0x00000000,0x00000000,$/;"	v
type	netq.h	/^  uint8_t type;$/;"	m	struct:netq_t
u_char	aes/rijndael.h	/^typedef unsigned char	u_char;$/;"	t
udp_server_process	examples/contiki/dtls-client.c	/^AUTOSTART_PROCESSES(&udp_server_process);$/;"	v
udp_server_process	examples/contiki/dtls-server.c	/^AUTOSTART_PROCESSES(&udp_server_process);$/;"	v
uint16	global.h	/^typedef unsigned char uint16[2];$/;"	t
uint24	global.h	/^typedef unsigned char uint24[3];$/;"	t
uint32	global.h	/^typedef unsigned char uint32[4];$/;"	t
uint32_t	uthash.h	/^typedef unsigned int uint32_t;$/;"	t
uint48	global.h	/^typedef unsigned char uint48[6];$/;"	t
uint8	global.h	/^typedef unsigned char uint8;$/;"	t
update_hs_hash	dtls.c	/^static inline void update_hs_hash(dtls_peer_t * peer, uint8 * data, size_t length)$/;"	f	file:
usage	sha2/sha2prog.c	/^void usage(char *prog, char *msg) {$/;"	f
usage	sha2/sha2speed.c	/^void usage(char *prog) {$/;"	f
usage	sha2/sha2test.pl	/^sub usage {$/;"	s
usage	tests/dtls-client.c	/^static void usage(const char *program, const char *version)$/;"	f	file:
usage	tests/dtls-server.c	/^static void usage(const char *program, const char *version)$/;"	f	file:
uthash_expand_fyi	uthash.h	72;"	d
uthash_fatal	uthash.h	67;"	d
uthash_free	uthash.h	69;"	d
uthash_malloc	uthash.h	68;"	d
uthash_noexpand_fyi	uthash.h	71;"	d
verify_ecdsa_key	dtls.h	/^  int (*verify_ecdsa_key)(struct dtls_context_t *ctx, $/;"	m	struct:__anon1
verify_ecdsa_key	examples/contiki/dtls-client.c	/^verify_ecdsa_key(struct dtls_context_t *ctx,$/;"	f	file:
verify_ecdsa_key	examples/contiki/dtls-server.c	/^verify_ecdsa_key(struct dtls_context_t *ctx,$/;"	f	file:
verify_ecdsa_key	tests/dtls-client.c	/^verify_ecdsa_key(struct dtls_context_t *ctx,$/;"	f	file:
verify_ecdsa_key	tests/dtls-server.c	/^verify_ecdsa_key(struct dtls_context_t *ctx,$/;"	f	file:
verify_ext_cert_type	dtls.c	/^static int verify_ext_cert_type(uint8 * data, size_t data_length)$/;"	f	file:
verify_ext_ec_point_formats	dtls.c	/^static int verify_ext_ec_point_formats(uint8 * data, size_t data_length)$/;"	f	file:
verify_ext_eliptic_curves	dtls.c	/^static int verify_ext_eliptic_curves(uint8 * data, size_t data_length)$/;"	f	file:
version	dtls.h	/^  uint16 version;		\/**< Protocol version *\/$/;"	m	struct:__anon2
version	dtls.h	/^  uint16 version;		\/**< Server version *\/$/;"	m	struct:__anon5
version	dtls.h	/^  uint16 version;	  \/**< Client version *\/$/;"	m	struct:__anon4
write	dtls.h	/^  int (*write)(struct dtls_context_t *ctx, $/;"	m	struct:__anon1
